ms_df$sound.stimulus
#get order filenames
all_orders <- list.files(path = "/Users/kmacdonald/Documents/Projects/SOL/SOL Orders iCoder/sol-f0-measurements",
pattern = '*.txt', all.files = FALSE)
#get measurements df
f0_df <- read.csv("/Users/kmacdonald/Documents/Projects/SOL/SOL Orders iCoder/sol-f0-measurements/sol-f0-measurements.csv")
## wrap measurments code up in a function to apply across all order files
f0_measurements <- function(filename, f0_df) {
#read filename as df
order_df <- read.table(paste("/Users/kmacdonald/Documents/Projects/SOL/SOL Orders iCoder/sol-f0-measurements/",
filename, sep=""), sep="\t", header=T)
#get only columns we care about from f0_df
f0_df <- f0_df %>%
select(sound.stimulus = file_name, CritOnset_new = f0_ms_2)
#join order and f0_df
order_df <- join(order_df, f0_df, by="sound.stimulus")
order_df <- order_df %>%
mutate(CritOnset = CritOnset_new) %>%
select(-CritOnset_new)
#Write order file to .txt file
write.table(order_df, paste("/Users/kmacdonald/Documents/Projects/SOL/SOL Orders iCoder/sol-f0-measurements/test.",
filename, sep = ""), sep="\t", row.names=F)
}
f0_measurements(test, f0_df)
?lapply()
?sapply()
#get order filenames
all_orders <- list.files(path = "/Users/kmacdonald/Documents/Projects/SOL/SOL Orders iCoder/sol-f0-measurements",
pattern = '*.txt', all.files = FALSE)
#get measurements df
f0_df <- read.csv("/Users/kmacdonald/Documents/Projects/SOL/SOL Orders iCoder/sol-f0-measurements/sol-f0-measurements.csv")
## wrap measurments code up in a function to apply across all order files
f0_measurements <- function(filename, f0_df) {
#read filename as df
order_df <- read.table(paste("/Users/kmacdonald/Documents/Projects/SOL/SOL Orders iCoder/sol-f0-measurements/",
filename, sep=""), sep="\t", header=T)
#get only columns we care about from f0_df
f0_df <- f0_df %>%
select(sound.stimulus = file_name, CritOnset_new = f0_ms_2)
#join order and f0_df
order_df <- join(order_df, f0_df, by="sound.stimulus")
order_df <- order_df %>%
mutate(CritOnset = CritOnset_new) %>%
select(-CritOnset_new)
#Write order file to .txt file
write.table(order_df, paste("/Users/kmacdonald/Documents/Projects/SOL/SOL Orders iCoder/sol-f0-measurements/test.",
filename, sep = ""), sep="\t", row.names=F)
}
lapply(all_orders, f0_measurements)
lapply(all_orders, f0_measurements(filename, f0_df))
lapply(all_orders, f0_measurements, f0_df = f0_df))
lapply(all_orders, f0_measurements, f0_df = f0_df))
?apply()
apply(all_orders, f0_measurements, f0_df=f0_df)
apply(all_orders, FUN = f0_measurements, f0_df=f0_df)
length(all_orders)
lapply(all_orders, FUN = f0_measurements, f0_df=f0_df)
#get order filenames
all_orders <- list.files(path = "/Users/kmacdonald/Documents/Projects/SOL/SOL Orders iCoder/sol-f0-measurements",
pattern = '*.txt', all.files = FALSE)
#get measurements df
f0_df <- read.csv("/Users/kmacdonald/Documents/Projects/SOL/SOL Orders iCoder/sol-f0-measurements/sol-f0-measurements.csv")
## wrap measurments code up in a function to apply across all order files
f0_measurements <- function(filename, f0_df) {
#read filename as df
order_df <- read.table(paste("/Users/kmacdonald/Documents/Projects/SOL/SOL Orders iCoder/sol-f0-measurements/",
filename, sep=""), sep="\t", header=T)
#get only columns we care about from f0_df
f0_df <- f0_df %>%
select(sound.stimulus = file_name, CritOnset_new = f0_ms_2)
#join order and f0_df
order_df <- join(order_df, f0_df, by="sound.stimulus")
order_df <- order_df %>%
mutate(CritOnset = CritOnset_new) %>%
select(-CritOnset_new)
#Write order file to .txt file
write.table(order_df, paste("/Users/kmacdonald/Documents/Projects/SOL/SOL Orders iCoder/sol-f0-measurements/",
filename, sep = ""), sep="\t", row.names=F)
}
# apply measurements function to all our order files
lapply(all_orders, FUN = f0_measurements, f0_df=f0_df)
library(plyr)
library(dplyr)
library(directlabels)
library(stringr)
all.data <- as.data.frame(matrix(ncol = 0, nrow = 0))
all_results <- list.files(path = "/Users/kmacdonald/Documents/Projects/SOC_XSIT/raw_data/child/",
pattern = 'results_*', all.files = FALSE)
# Create empty arrays for binding
all.data <- as.data.frame(matrix(ncol = 0, nrow = 0))
#grab all file names from data dir.
#These are all of the kids for whom we have ipad data
all_results <- list.files(path = "/Users/kmacdonald/Documents/Projects/SOC_XSIT/raw_data/child/",
pattern = 'results_*', all.files = FALSE)
#function to munge the data
#takes in a list of filenames (.txt of each kid's data),
#strips html escape characters, and grabs the relevant info for each trial
#returns data frame with all the data
bing_clean <- function(filename) {
x <- readLines(paste("/Users/kmacdonald/Documents/Projects/SOC_XSIT/raw_data/child/",
filename,sep=""),warn=FALSE)
x <- unlist(strsplit(x,'<li>'))
#grab condition
condition <- x[3]
if (grepl(pattern="Social", condition)) {
condition <- str_extract(pattern="Social", condition)
} else {
condition <- str_extract(pattern="No-social", condition)
}
# grab trial information
x <- x[11:150]
#strip html characters
x <- gsub('\\"',"", x)
x <- gsub("\\\\\"","",x)
x <- gsub("</li>","",x)
x <- gsub("</ul>\\},\\{<ul>","",x)
x[length(x)] <- gsub("</ul>\\}]","",x[length(x)])
x <- gsub("^.*?: ","",x)
#grab date
date <- str_sub(filename,20,36)
date <- gsub('_','',date)
date <- gsub('\\.','',date)
#grab id
id <- str_sub(filename,0,2)
id <- gsub('-','',id)
#bind to data frame
x <- as.data.frame(matrix(x,14,10,byrow=TRUE), stringsAsFactors=F)
x$V11 <- date
x$V12 <- id
x$V13 <- condition
return(x) ## need this to get the data frame!
}
#apply munging function to each kid's data file
all.data <- ldply(
.data = all_results,
.fun = bing_clean
)
#add variable names to columns
names(all.data) <- c("itemNum","trialType","samePos","chosen","chosen_idx",
"kept","kept_idx","rt","faceVid","faceIdx", "date", "id", "condition")
View(all.data)
#dplyr syntax
all.data <- all.data %>%
group_by(date) %>%
mutate(trial = c(1:14)) %>%
mutate(example_trial = ifelse(trial %in% c(1:2),1,0),
exposure_trial = ifelse(trial %in% c(3,5,7,9,11,13),1,0),
test_trial = ifelse(trial %in% c(4,6,8,10,12,14),1,0)) %>%
arrange(date, trial)
View(all.data)
#find whether child's choice was correct
#for exposure trials, we check the index of eye gaze against child's choice
#for test trials, we check the kept image against the child's choice
all.data <- all.data %>%
group_by(id) %>%
mutate(correct = ifelse(exposure_trial == 1, chosen_idx == faceIdx,
ifelse(example_trial == 1, chosen[1] == "flower" & chosen[2] == "truck",
chosen == kept)))
#relabel variables and variable types for analysis
all.data$rt <- as.integer(all.data$rt)
all.data$condition <- as.factor(all.data$condition)
demo <- read.csv("/Users/kmacdonald/Documents/Projects/SOC_XSIT/raw_data/child/soc-xsit-ipad-demo.csv")
View(demo)
View(all.data)
all.data <- join(all.data,demo)
View(all.data)
all.data <- all.data[c("id","birthday","gender","age","age.group","date", "condition",
"trial","itemNum","trialType","samePos","chosen","chosen_idx","kept",
"kept_idx","rt","faceVid","faceIdx","example_trial",
"exposure_trial","test_trial", "correct", "include")]
all.data <- all.data[c("id","birthday","gender","age","age_group","date", "condition",
"trial","itemNum","trialType","samePos","chosen","chosen_idx","kept",
"kept_idx","rt","faceVid","faceIdx","example_trial",
"exposure_trial","test_trial", "correct", "include")]
View(all.data)
exposure.trials <- all.data %>%
filter(exposure_trial == 1) %>%
mutate(trial_type_redo = ifelse(chosen == kept,1,2)) %>%
select(id, itemNum, trial_type_redo, chosen_exposure = chosen,
kept_exposure = kept, correct_exposure = correct)
test.trials <- all.data %>%
filter(test_trial == 1)
test.trials <- join(test.trials,exposure.trials, by=c("id","itemNum"))
test.trials$trial_type_redo <- factor(test.trials$trial_type_redo,
labels = c('Same','Switch'))
View(test.trials)
write.csv(all.data, file="/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/child/soc-xsit-ipad-alldata.csv")
write.csv(test.trials, file="/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/child/soc-xsit-ipad-testdata.csv")
library(plyr)
library(dplyr)
library(bootstrap)
library(lme4)
library(ggplot2)
source("/Users/kmacdonald/Documents/Projects/SOC_XSIT/XSIT-MIN/analysis/Ranalysis/useful.R")
data.all_df <- read.csv("/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/child/soc-xsit-ipad-alldata.csv")
data.test_df <- read.csv("/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/child/soc-xsit-ipad-testdata.csv")
data.test_df %>%
summarise(n_subjects = n_distinct(id)) %>%
print()
data.test_df %>%
group_by(condition) %>%
summarise(n_subjects = n_distinct(id)) %>%
print()
data.test_df %>%
group_by(age.group, condition) %>%
summarise(n_subject = n_distinct(id)) %>%
print()
data.test_df %>%
group_by(age_group, condition) %>%
summarise(n_subject = n_distinct(id)) %>%
print()
include_df <- data.test_df %>%
group_by(id, trial_type_redo) %>%
summarise(n_trial = n()) %>%
mutate(include_trial = ifelse(n_trial >= 2, 1,0)) %>%
summarise(sum(include_trial))
include_df <- include_df %>%
mutate(include_kid = ifelse(include_df[,2] == 2, 1,0)) %>%
select(id, include_kid)
#Keep only kids who got at least 2 same/switch trials
data.test_df <- join(data.test_df, include_df, by="id")
View(data.test_df)
data.test_df %>%
group_by(id, trial_type_redo) %>%
summarise(n_trial = n()) %>%
head()
View(data.test_df)
?summarise
data.test_df %>%
group_by(condition, trial_type_redo) %>%
summarise(mean(correct))
means <- data.test_df %>%
group_by(condition, trial_type_redo) %>%
summarise(mean(correct))
names(data.all_df)
names(data.test_df_df)
names(data.test_df)
data.test_df %>%
filter(include==1) %>%
group_by(condition, trial_type_redo) %>%
summarise(mean(correct))
data.test.df %>%
filter(include == 1, age_group == 4 | age_group == 5)
data.test_df %>%
filter(include == 1, age_group == 4 | age_group == 5)
means.filtered <- data.test_df %>%
filter(include == 1, age_group == 4 | age_group == 5)
View(means.filtered)
names(data.test_df)
means.filtered <- data.test_df %>%
filter(
include == 1,
age_group == 4 | age_group == 5,
correct_exposure == TRUE
)
View(means.filtered)
means.filtered <- data.test_df %>%
filter(
include == 1,
age_group == 4 | age_group == 5,
condition == "No-social" | correct_exposure == TRUE
)
View(means.filtered)
data.test_df %>%
filter(
include == 1,
age_group == 4 | age_group == 5,
condition == "No-social" | correct_exposure == TRUE
) %>%
group_by(condition, trial_type_redo) %>%
summarise(mean(correct))
data.test_df %>%
filter(include == 1) %>%
group_by(condition, trial_type_redo) %>%
summarise(mean(correct))
means.filtered <- data.test_df %>%
filter(
include == 1,
age_group == 4 | age_group == 5,
condition == "No-social" | correct_exposure == TRUE
) %>%
group_by(condition, trial_type_redo) %>%
summarise(mean(correct))
means.filtered <- data.test_df %>%
filter(
include == 1,
age_group == 4 | age_group == 5,
condition == "No-social" | correct_exposure == TRUE
) %>%
group_by(condition, trial_type_redo) %>%
summarise(mean(correct), ci.high(correct), ci.low(correct))
View(means.filtered)
means.filtered <- data.test_df %>%
filter(
include == 1,
age_group == 4 | age_group == 5,
condition == "No-social" | correct_exposure == TRUE
) %>%
group_by(condition, trial_type_redo) %>%
summarise(mean(correct), ci.high(correct), ci.low(correct), n_trial = n())
View(means.filtered)
?ggplot()
means.filtered <- data.test_df %>%
filter(
include == 1,
age_group == 4 | age_group == 5,
condition == "No-social" | correct_exposure == TRUE
) %>%
group_by(condition, trial_type_redo) %>%
summarise(mean(correct), ci.high(correct), ci.low(correct), n_trial = n())
View(means.filtered)
names(x = )
names(means.filtered)
ggplot(data = means.filtered,
aes(condition, mean(correct))
)
ggplot(data = means.filtered, aes(x = condition, y = mean(correct))) +
geom_point()
?mutate()
names(means.filtered)
means.filtered %>%
select(
mean = mean(correct)
)
means.filtered[,2]
means.filtered[,3]
means.filtered$mean(correcty)
means.filtered$mean(correct)
means.filtered %>%
select(
mean = means.filtered[,3]
)
means.filtered <- means.filtered %>%
select(
means.filtered[,3]  = mean
)
means.filtered %>%
select(
means.filtered[,3]  = mean
)
means.filtered %>%
select(
means.filtered[,3] = mean
)
means.filtered[,3]
names(means.filtered
)
means.filtered[,3]
colnames()[3]
colnames(means.filtered)[3]
means.filtered %>%
select(
colnames(means.filtered)[3] = mean
)
means.filtered %>%
select(
mean = colnames(means.filtered)[3]
)
colnames(means.filtered)[3]
temp <- colnames(means.filtered)[3]
means.filtered %>%
select(
mean = temp
)
means.filtered %>%
select(
temp = temp
)
means.filtered %>%
select(
temp = mean
)
names(means.filtered)
means.filtered %>%
select(
trial_type = trial_type_redo
)
?rename()
?select
means.filtered %>%
select(mean = "mean(correct)")
select("mean(correct)" = temp)
means.filtered %>%
select("mean(correct)" = temp)
rename(means.filtered, "mean(correct)", "mean")
rename(means.filtered, "mean(correct)" = "mean")
rename(means.filtered, "mean(correct)" = "temp")
rename(means.filtered, `mean(correct)` = "temp")
?contains()
select(means.filtered, starts_with("mean"))
select(means.filtered, temp = starts_with("mean"))
means.filtered %>%
select(mean_correct = starts_with("mean"))
means.filtered <- data.test_df %>%
filter(
include == 1,
age_group == 4 | age_group == 5,
condition == "No-social" | correct_exposure == TRUE
) %>%
group_by(condition, trial_type_redo) %>%
summarise(mean_correct = mean(correct), ci.high(correct), ci.low(correct), n_trial = n())
View(means.filtered)
means.filtered <- data.test_df %>%
filter(
include == 1,
age_group == 4 | age_group == 5,
condition == "No-social" | correct_exposure == TRUE
) %>%
group_by(condition, trial_type_redo) %>%
summarise(mean_correct = mean(correct),
ci.high = ci.high(correct),
ci.low = ci.low(correct), n_trial = n()
)
View(means.filtered)
means.filtered <- data.test_df %>%
filter(
include == 1,
age_group == 4 | age_group == 5,
condition == "No-social" | correct_exposure == TRUE
) %>%
group_by(condition, trial_type_redo) %>%
summarise(mean_correct = mean(correct),
ci_high = ci.high(correct),
ci_low = ci.low(correct), n_trial = n()
)
ggplot(data = means.filtered, aes(x = condition, y = mean(correct))) +
geom_point()
ggplot(data = means.filtered, aes(x = condition, y = mean_correct) +
geom_point()
ggplot(data = means.filtered, aes(x = condition, y = mean_correct)) +
geom_point()
ggplot(data = means.filtered, aes(x = condition, y = mean_correct)) +
geom_point() +
geom_errorbar(aes(ymin = mean_correct - ci_low, ymax = mean_correct + ci_high), width = 0.1)
ggplot(data = means.filtered, aes(x = condition, y = mean_correct)) +
geom_point(aes(group = condition)) +
geom_errorbar(aes(ymin = mean_correct - ci_low, ymax = mean_correct + ci_high), width = 0.1)
ggplot(data = means.filtered, aes(x = condition, y = mean_correct)) +
geom_point(aes(colour = condition)) +
geom_errorbar(aes(ymin = mean_correct - ci_low, ymax = mean_correct + ci_high), width = 0.1)
ggplot(data = means.filtered, aes(x = condition, y = mean_correct), colour = condition) +
geom_point() +
geom_errorbar(aes(ymin = mean_correct - ci_low, ymax = mean_correct + ci_high), width = 0.1)
ggplot(data = means.filtered, aes(x = condition, y = mean_correct, colour = condition)) +
geom_point() +
geom_errorbar(aes(ymin = mean_correct - ci_low, ymax = mean_correct + ci_high), width = 0.1)
ggplot(data = means.filtered, aes(x = condition, y = mean_correct, colour = condition)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = mean_correct - ci_low, ymax = mean_correct + ci_high), width = 0.1)
ggplot(data = means.filtered, aes(x = condition, y = mean_correct, colour = condition)) +
geom_point() +
geom_line(aes(group = condition)) +
geom_errorbar(aes(ymin = mean_correct - ci_low, ymax = mean_correct + ci_high), width = 0.1)
?geom_hline
ggplot(data = means.filtered, aes(x = condition, y = mean_correct, colour = condition)) +
geom_point() +
geom_line(aes(group = condition)) +
geom_errorbar(aes(ymin = mean_correct - ci_low, ymax = mean_correct + ci_high), width = 0.1) +
geom_hline(yintercept = 0.5)
ggplot(data = means.filtered, aes(x = condition, y = mean_correct, colour = condition)) +
geom_point() +
geom_line(aes(group = condition)) +
geom_errorbar(aes(ymin = mean_correct - ci_low, ymax = mean_correct + ci_high), width = 0.1) +
geom_hline(yintercept = 0.5, linetype = dotted)
ggplot(data = means.filtered, aes(x = condition, y = mean_correct, colour = condition)) +
geom_point() +
geom_line(aes(group = condition)) +
geom_errorbar(aes(ymin = mean_correct - ci_low, ymax = mean_correct + ci_high), width = 0.1) +
geom_hline(yintercept = 0.5, linetype = c)
ggplot(data = means.filtered, aes(x = condition, y = mean_correct, colour = condition)) +
geom_point() +
geom_line(aes(group = condition)) +
geom_errorbar(aes(ymin = mean_correct - ci_low, ymax = mean_correct + ci_high), width = 0.1) +
geom_hline(yintercept = 0.5, linetype = "dashed")
ggplot(data = means.filtered, aes(x = condition, y = mean_correct, colour = condition)) +
geom_point() +
geom_errorbar(aes(ymin = mean_correct - ci_low, ymax = mean_correct + ci_high), width = 0.1) +
geom_hline(yintercept = 0.5, linetype = "dashed")
?scale_x_discrete
names(means.filtered)
names(data.test_df)
data.test_df %>%
group_by(include) %>%
summarise(mean_correct = mean(correct_exposure),
ci_high = ci.high(correct_exposure),
ci_low = chi.low(correct_exposure)
)
data.test_df %>%
group_by(include) %>%
summarise(mean_correct = mean(correct_exposure),
ci_high = ci.high(correct_exposure),
ci_low = ci.low(correct_exposure)
)
```
mean(data.test_df$correct_exposure)
View(data.test_df)
View(data.all_df)
data.test_df %>%
filter(condition == "Social")
group_by(include) %>%
summarise(mean_correct = mean(correct_exposure),
ci_high = ci.high(correct_exposure),
ci_low = ci.low(correct_exposure)
)
data.test_df %>%
filter(condition == "Social") %>%
group_by(include) %>%
summarise(mean_correct = mean(correct_exposure),
ci_high = ci.high(correct_exposure),
ci_low = ci.low(correct_exposure)
)
