long.data$trial.num[row]==20) {
long.data$testTrial[row] <- 1
} else {
long.data$exampleTrial[row] <- 1
}
} else if (long.data$interval[row] == "One") {
if (long.data$trial.num[row]==5 |
long.data$trial.num[row]==6 |
long.data$trial.num[row]==9 |
long.data$trial.num[row]==10 |
long.data$trial.num[row]==13 |
long.data$trial.num[row]==14 |
long.data$trial.num[row]==17 |
long.data$trial.num[row]==18) {
long.data$exposureTrial[row] <- 1
} else if (long.data$trial.num[row]==7 |
long.data$trial.num[row]==8 |
long.data$trial.num[row]==11 |
long.data$trial.num[row]==12 |
long.data$trial.num[row]==15 |
long.data$trial.num[row]==16 |
long.data$trial.num[row]==19 |
long.data$trial.num[row]==20) {
long.data$testTrial[row] <- 1
} else {
long.data$exampleTrial[row] <- 1
}
} else if (long.data$interval[row] == "Three") {
if (long.data$trial.num[row]==5 |
long.data$trial.num[row]==6 |
long.data$trial.num[row]==7 |
long.data$trial.num[row]==8 |
long.data$trial.num[row]==13 |
long.data$trial.num[row]==14 |
long.data$trial.num[row]==15 |
long.data$trial.num[row]==16) {
long.data$exposureTrial[row] <- 1
} else if (long.data$trial.num[row]==9 |
long.data$trial.num[row]==10 |
long.data$trial.num[row]==11 |
long.data$trial.num[row]==12 |
long.data$trial.num[row]==17 |
long.data$trial.num[row]==18 |
long.data$trial.num[row]==19 |
long.data$trial.num[row]==20) {
long.data$testTrial[row] <- 1
} else {
long.data$exampleTrial[row] <- 1
}
} else if (long.data$interval[row] == "Seven") {
if (long.data$trial.num[row]==5 |
long.data$trial.num[row]==6 |
long.data$trial.num[row]==7 |
long.data$trial.num[row]==8 |
long.data$trial.num[row]==9 |
long.data$trial.num[row]==10 |
long.data$trial.num[row]==11 |
long.data$trial.num[row]==12) {
long.data$exposureTrial[row] <- 1
} else if (long.data$trial.num[row]==13 |
long.data$trial.num[row]==14 |
long.data$trial.num[row]==15 |
long.data$trial.num[row]==16 |
long.data$trial.num[row]==17 |
long.data$trial.num[row]==18 |
long.data$trial.num[row]==19 |
long.data$trial.num[row]==20) {
long.data$testTrial[row] <- 1
} else {
long.data$exampleTrial[row] <- 1
}
}
}
all.data <- long.data
View(all.data)
## computes day/time of each hit for excluding multiples
all.data$day.and.time <- chron(dates = all.data$submit.date,
times = all.data$submit.time,
format=c("mon d y","h:m:s"))
all.data <- all.data[with(all.data,order(subid,day.and.time)),]
drop.subs <- ddply(all.data,.(subid),
function(x) {nrow(x) > 20})
drop.subs <- drop.subs[drop.subs$V1,1] # grabs subs who participated more than once
# grabs earliest HIT for each participant
all.drops <- matrix(0,nrow(all.data))
for(sub in drop.subs) {
rows <- as.integer(all.data$subid == sub)
all.drops[rows & (cumsum(rows) > 20)] <- 1
}
all.data <- subset(all.data,!all.drops) ## subsets data without subs who participated twice
# recodes subid as factor and recode trial type as factor with two levels: Same and Switch
all.data$subid <- as.factor(all.data$subid)
all.data$trialType <- factor(all.data$trialType, labels = c('Same','Switch'))
# recode interval as numeric for plotting
all.data$intervalNum <- recode(all.data$interval, "'Zero'=0; 'One'=1; 'Three'=3; 'Seven'=7", as.factor.result=FALSE)
# renumbers trials to be consistent across conditions
trial.nums <- function(x) {
xmod <- x
nums <- x$trial.num
for (i in 1:length(nums)) {
xmod$trial.num[xmod$trial.num==nums[i]] <- i
}
return(xmod)
}
## excludes subjects for getting example trials wrong
# grabs example data
example.data <- all.data[all.data$trial.num == 1:4, ]
include.subs <- ddply(example.data,.(subid),
function(x) {x$chosen[1] == "squirrel" &
x$chosen[2] == "squirrel" &
x$chosen[3] == "tomato" &
x$chosen[4] == "tomato"})
names(include.subs) <- c("subid","include")
# merges include column to data frame
all.data <- merge(all.data,include.subs,sort = FALSE)
# keeps just the subs who responded accurately on example trials
keep.data <- subset(all.data,include)
## flag first test trials for subjects ##
keep.data$first.trial <- FALSE
keep.data$first.trial[(keep.data$interval=="Zero" & keep.data$trial.num==6) |
(keep.data$interval=="One" & keep.data$trial.num==7) |
(keep.data$interval=="Three" & keep.data$trial.num==9) |
(keep.data$interval=="Seven" & keep.data$trial.num==13)] <- TRUE
# creates numeric vars for data analysis
keep.data$numPicN <- as.numeric(keep.data$numPic)
# flags correct/incorrect on same/switch trials
keep.data$correct <- keep.data$chosen == keep.data$kept
write.csv(keep.data, "/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/soc_xsit_4_looks_pilot_2.csv")
d1 <- read.csv("/Users/kmacdonald/soc_xsit/processed_data/soc_xsit_4_looks_pilot_2.csv")
library(bootstrap)
library(lme4)
library(ggplot2)
library(arm)
library(directlabels)
library(stringr)
library(plyr)
library(reshape2)
library(car)
library(dplyr)
library(xtable)
source('/Users/kmacdonald/soc_xsit/XSIT-MIN/analysis/Ranalysis/useful.R')
source('/Users/kmacdonald/soc_xsit/XSIT-MIN/analysis/Ranalysis/useful.R')
source("/Users/kmacdonald/soc_xsit/XSIT-MIN/analysis/Ranalysis/useful.R")
source("/Users/kmacdonald/Documents/Projects/SOC_XSIT/XSIT-MIN/analysis/Ranalysis/useful.R")
d1 <- read.csv("/Users/kmacdonald/soc_xsit/processed_data/soc_xsit_4_looks_pilot_2.csv")
d <- read.csv("/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/soc_xsit_4_looks_pilot.csv")
d1 <- read.csv("/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/soc_xsit_4_looks_pilot_2.csv")
d.numSubs <- aggregate(correct ~ subid + gazeLength + condition, data=d, FUN=mean)
d.numSubs.summary <- count(d.numSubs, vars=c("gazeLength", "condition"))
d.numSubs.summary
d1.numSubs <- d.numSubs <- aggregate(correct ~ subid + gazeLength + condition, data=d1, FUN=mean)
d.numSubs.summary <- count(d1.numSubs, vars=c("gazeLength", "condition"))
d.numSubs.summary
d1.test <- subset(d1, testTrial==1)                               # test trials
d1.first.trial <- subset(d1, testTrial==1 & first.trial==TRUE)    # first test trial for each sub
d1.exp <- subset(d1, exposureTrial==1)                            # exposure trials
d1.choseSocial <- subset(d1.exp, select=c("subid", "itemNum",
"choseSocial", "rt"))   # exposure trials chose gazeTar
d1.test.gazeTar <- merge(d1.test, d.choseSocial,
by=c("subid", "itemNum"),
all=TRUE)                          # test trials with exp trial info
d1.test.choseGazeTar <- subset(d1.test.gazeTar,
choseSocial == TRUE,
select=c(subid:rt.y))             # test trials: just chose gazeTar on exp
d1.test <- subset(d1, testTrial==1)                               # test trials
d1.first.trial <- subset(d1, testTrial==1 & first.trial==TRUE)    # first test trial for each sub
d1.exp <- subset(d1, exposureTrial==1)                            # exposure trials
d1.exp$faceIdx <- revalue(d1.exp$face, c("silentLDlong"=2, "silentLDmedium"=2, "silentLDshort"=2,
"silentLUlong"=0, "silentLUmedium"=0, "silentLUshort"=0,
"silentRDlong"=3, "silentRDmedium"=3, "silentRDshort"=3,
"silentRUlong"=1, "silentRUmedium"=1, "silentRUshort"=1,
"straightahead"=-1))
View(`d1.exp`)
d1.exp$choseSocial <- NA
d1.exp$choseSocial <- d1.exp$faceIdx == d1.exp$chosenIdx
mss.exp.1 <- aggregate(choseSocial ~ trialType + subid + gazeLength, data=d1.exp, FUN=mean)
ms.exp.1 <- aggregate(choseSocial ~  gazeLength, data=mss.exp.1, FUN=mean)
ms.exp.1$choseSocial.cih <- aggregate(choseSocial ~ gazeLength, data=mss.exp.1, FUN=ci.high)$choseSocial
ms.exp.1$choseSocial.cil <- aggregate(choseSocial ~ gazeLength, data=mss.exp.1, FUN=ci.low)$choseSocial
acc_exp_pilot2 <- ggplot(data=ms.exp.1, aes(x=gazeLength, y=choseSocial)) +
geom_bar(stat="identity", fill="dodgerblue") +
geom_errorbar(aes(ymin=choseSocial-choseSocial.cil, ymax=choseSocial+choseSocial.cih),
width=.2) +
ylim(0,1) +
xlab("Gaze Length") +
ylab("Proportion of Subjects Chose Gaze Target") +
theme_bw()
acc_exp_pilot2
acc_exp_pilot2 <- ggplot(data=ms.exp.1, aes(x=cond, y=choseSocial)) +
geom_bar(stat="identity", fill="dodgerblue") +
geom_errorbar(aes(ymin=choseSocial-choseSocial.cil, ymax=choseSocial+choseSocial.cih),
width=.2) +
ylim(0,1) +
xlab("Gaze Length") +
ylab("Proportion of Subjects Chose Gaze Target") +
theme_bw()
acc_exp_pilot2
names(d1.exp)
d1.exp$cond
d1.test <- subset(d1, testTrial==1)                               # test trials
d1.first.trial <- subset(d1, testTrial==1 & first.trial==TRUE)    # first test trial for each sub
d1.exp <- subset(d1, exposureTrial==1)                            # exposure trials
```
```{r exposure gaze target, echo=FALSE}
## match faceIdx to chosenIdx
d1.exp$faceIdx <- revalue(d1.exp$face, c("silentLDlong"=2, "silentLDmedium"=2, "silentLDshort"=2,
"silentLUlong"=0, "silentLUmedium"=0, "silentLUshort"=0,
"silentRDlong"=3, "silentRDmedium"=3, "silentRDshort"=3,
"silentRUlong"=1, "silentRUmedium"=1, "silentRUshort"=1,
"straightahead"=-1))
## flag as true if subs chose target of gaze
d1.exp$choseSocial <- NA
d1.exp$choseSocial <- d1.exp$faceIdx == d1.exp$chosenIdx
## get mean chose target of gaze by trial type, gazeLength condition, and sub id
mss.exp.1 <- aggregate(choseSocial ~ trialType + subid + cond, data=d1.exp, FUN=mean)
ms.exp.1 <- aggregate(choseSocial ~  cond, data=mss.exp.1, FUN=mean)
ms.exp.1$choseSocial.cih <- aggregate(choseSocial ~ gazeLength, data=mss.exp.1, FUN=ci.high)$choseSocial
ms.exp.1$choseSocial.cil <- aggregate(choseSocial ~ gazeLength, data=mss.exp.1, FUN=ci.low)$choseSocial
## plot accuracy for three different gaze conditions
acc_exp_pilot2 <- ggplot(data=ms.exp.1, aes(x=cond, y=choseSocial)) +
geom_bar(stat="identity", fill="dodgerblue") +
geom_errorbar(aes(ymin=choseSocial-choseSocial.cil, ymax=choseSocial+choseSocial.cih),
width=.2) +
ylim(0,1) +
xlab("Gaze Length") +
ylab("Proportion of Subjects Chose Gaze Target") +
theme_bw()
acc_exp_pilot2
mss.exp.1 <- aggregate(choseSocial ~ trialType + subid + cond, data=d1.exp, FUN=mean)
View(`d1.exp`)
d1.exp$faceIdx <- revalue(d1.exp$face, c("silentLDlong"=2, "silentLDmedium"=2, "silentLDshort"=2,
"silentLUlong"=0, "silentLUmedium"=0, "silentLUshort"=0,
"silentRDlong"=3, "silentRDmedium"=3, "silentRDshort"=3,
"silentRUlong"=1, "silentRUmedium"=1, "silentRUshort"=1,
"straightahead"=-1))
## flag as true if subs chose target of gaze
d1.exp$choseSocial <- NA
d1.exp$choseSocial <- d1.exp$faceIdx == d1.exp$chosenIdx
## get mean chose target of gaze by trial type, gazeLength condition, and sub id
mss.exp.1 <- aggregate(choseSocial ~ trialType + subid + condition, data=d1.exp, FUN=mean)
ms.exp.1 <- aggregate(choseSocial ~  condition, data=mss.exp.1, FUN=mean)
ms.exp.1$choseSocial.cih <- aggregate(choseSocial ~ condition, data=mss.exp.1, FUN=ci.high)$choseSocial
ms.exp.1$choseSocial.cil <- aggregate(choseSocial ~ condition, data=mss.exp.1, FUN=ci.low)$choseSocial
acc_exp_pilot2 <- ggplot(data=ms.exp.1, aes(x=cond, y=choseSocial)) +
geom_bar(stat="identity", fill="dodgerblue") +
geom_errorbar(aes(ymin=choseSocial-choseSocial.cil, ymax=choseSocial+choseSocial.cih),
width=.2) +
ylim(0,1) +
xlab("Gaze Length") +
ylab("Proportion of Subjects Chose Gaze Target") +
theme_bw()
acc_exp_pilot2
acc_exp_pilot2 <- ggplot(data=ms.exp.1, aes(x=condition, y=choseSocial)) +
geom_bar(stat="identity", fill="dodgerblue") +
geom_errorbar(aes(ymin=choseSocial-choseSocial.cil, ymax=choseSocial+choseSocial.cih),
width=.2) +
ylim(0,1) +
xlab("Gaze Length") +
ylab("Proportion of Subjects Chose Gaze Target") +
theme_bw()
acc_exp_pilot2
d1.choseSocial <- subset(d1.exp, select=c("subid", "itemNum",
"choseSocial", "rt"))   # exposure trials chose gazeTar
d1.test.gazeTar <- merge(d1.test, d.choseSocial,
by=c("subid", "itemNum"),
all=TRUE)
d1.test.gazeTar <- merge(d1.test, d1.choseSocial,
by=c("subid", "itemNum"),
all=TRUE)
d1.test.choseGazeTar <- subset(d1.test.gazeTar,
choseSocial == TRUE,
select=c(subid:rt.y))
mss.gaze.tar.1 <- aggregate(correct ~ trialType + condition + subid, data=d1.test.choseGazeTar,
FUN=mean, na.action = na.omit)
ms.gaze.tar.1 <- aggregate(correct ~ trialType + condition, data=mss.gaze.tar.1,
FUN=mean, na.action = na.omit)
ms.gaze.tar.1$corr.cih <- aggregate(correct ~ trialType + condition, data=mss.gaze.tar.1,
FUN=ci.high, na.action = na.omit)$correct
ms.gaze.tar.1$corr.cil <- aggregate(correct ~ trialType + condition,
data=mss.gaze.tar.1, FUN=ci.low, na.action = na.omit)$correct
acc_plot_test_p1 <- qplot(data=ms.gaze.tar,x=condition, y=correct, linetype=trialType,
ymin=correct-corr.cil, ymax=correct+corr.cih,
colour=condition,
geom=c("pointrange", "line"),
position=position_dodge(width=.02)) +
scale_y_continuous(limits = c(0,1),breaks=c(0,.25,.5,.75,1),
name = "Prop. Choosing Repeated Referent") +
geom_hline(aes(yintercept=1/4),lty=2)
acc_plot_test_p1
acc_plot_test_p1 <- qplot(data=ms.gaze.tar.1,x=condition, y=correct, linetype=trialType,
ymin=correct-corr.cil, ymax=correct+corr.cih,
colour=condition,
geom=c("pointrange", "line"),
position=position_dodge(width=.02)) +
scale_y_continuous(limits = c(0,1),breaks=c(0,.25,.5,.75,1),
name = "Prop. Choosing Repeated Referent") +
geom_hline(aes(yintercept=1/4),lty=2)
acc_plot_test_p1
str(d1.test.choseGazeTar)
d1.test.choseGazeTar <- subset(d1.test.gazeTar,
choseSocial == TRUE || condition == "No-social",
select=c(subid:rt.y))
View(`d1.test.choseGazeTar`)
str(d1.test.choseGazeTar)
mss.gaze.tar.1 <- aggregate(correct ~ trialType + condition + subid, data=d1.test.choseGazeTar,
FUN=mean, na.action = na.omit)
ms.gaze.tar.1 <- aggregate(correct ~ trialType + condition, data=mss.gaze.tar.1,
FUN=mean, na.action = na.omit)
ms.gaze.tar.1$corr.cih <- aggregate(correct ~ trialType + condition, data=mss.gaze.tar.1,
FUN=ci.high, na.action = na.omit)$correct
ms.gaze.tar.1$corr.cil <- aggregate(correct ~ trialType + condition,
data=mss.gaze.tar.1, FUN=ci.low, na.action = na.omit)$correct
acc_plot_test_p1 <- qplot(data=ms.gaze.tar.1,x=condition, y=correct, linetype=trialType,
ymin=correct-corr.cil, ymax=correct+corr.cih,
colour=condition,
geom=c("pointrange", "line"),
position=position_dodge(width=.02)) +
scale_y_continuous(limits = c(0,1),breaks=c(0,.25,.5,.75,1),
name = "Prop. Choosing Repeated Referent") +
geom_hline(aes(yintercept=1/4),lty=2)
acc_plot_test_p1
exp.gazeLength <- factor(ms.gaze.tar$gazeLength, c("Short", "Medium", "Long"))
m1.l <- glmer(correct ~ trialType * condition +
(trialType | subid),
data=d.test.choseGazeTar, family=binomial, nAGQ=0)
?lmer
?glmer
View(`d1.test.choseGazeTar`)
m1.l <- glmer(correct ~ trialType * condition *
log2(intervalNum + 1) * log2(numPicN) +
(trialType | subid),
data=d.gaze.tar, family=binomial, nAGQ=0)
m1.l <- glmer(correct ~ trialType * condition +
(trialType | subid),
data=d1.test.choseGazeTar, family=binomial, nAGQ=0)
summary(m1.l)
View(ms.exp.1)
View(mss.gaze.tar.1)
View(ms.gaze.tar.1)
m1.l <- glmer(correct ~ trialType * condition +
(trialType | subid),
data=d1.test.choseGazeTar, family=binomial, nAGQ=0)
summary(m1.l)
aggregate(correct ~ trialType + condition, d1.test.choseGazeTar, mean)
head(d1.test.choseGazeTar)
aggregate(subid ~ trialType + condition, d1.test.choseGazeTar, n.unique)
aggregate(correct ~ trialType + condition, d1.test.choseGazeTar, mean)
?glmer()
m2.l <- glmer(correct ~ trialType * condition +
(trialType | subid),
data=subset(d1.test.choseGazeTar, trialType=="Switch"), family=binomial, nAGQ=0)
m2.l <- glmer(correct ~ condition +
(trialType | subid),
data=subset(d1.test.choseGazeTar, trialType=="Switch"), family=binomial, nAGQ=0)
m2.l <- glmer(correct ~ condition +
(1|subid),
data=subset(d1.test.choseGazeTar, trialType=="Switch"), family=binomial, nAGQ=0)
summary(m2.l)
m2.l <- glmer(correct ~ condition +
(1|subid),
data=subset(d1.test.choseGazeTar, trialType=="Same"), family=binomial, nAGQ=0)
summary(m2.l)
m1.l <- glmer(correct ~ trialType * condition +
(trialType | subid),
data=d1.test.choseGazeTar, family=binomial)
summary(m1.l)
m1.l <- glm(correct ~ trialType * condition,
data=d1.test.choseGazeTar, family=binomial)
summary(m1.l)
d <- read.csv("/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/soc_xsit_expt1_master.csv")
## get the test trials only
d.test <- subset(d, testTrial==1)
## get first trials only
d.first.trial <- subset(d, testTrial==1 & first.trial==TRUE)
## grab exposure trials only
d.exp <- subset(d, exposureTrial==1)
d.exp$faceIdx6 <- revalue(d.exp$face, c("eyes_left_90"=0, "eyes_right_90"=1,
"eyes_left"=2, "eyes_down_left"=3,
"eyes_down_right"=4, "eyes_right"=5,
"eyescenter"=-1))
## grab exposure trials only
d.exp <- subset(d, exposureTrial==1)
d.exp$faceIdx6 <- revalue(d.exp$face, c("eyes_left_90"=0, "eyes_right_90"=1,
"eyes_left"=2, "eyes_down_left"=3,
"eyes_down_right"=4, "eyes_right"=5,
"eyescenter"=-1))
# flag if subject chose target of eye gaze
# exposure trials left/right midline and on the bottom row
d.exp$choseSocial <- NA
d.exp$imgLocation <- NA
d.exp$imgLocation <- ifelse((d.exp$face == "eyes_right_90") |
(d.exp$face == "eyes_left_90") |
(d.exp$face == "eyes_center" & d.exp$chosenIdx <= 1),
"midline",
ifelse((d.exp$face == "eyes_up_left") |
(d.exp$face == "eyes_up_mid_left") |
(d.exp$face == "eyes_up_mid_right") |
(d.exp$face == "eyes_up_right") |
(d.exp$face == "eyes_center" & d.exp$chosenIdx <= 3),
"top",
"bottom"))
d.exp$choseSocial <- ifelse((d.exp$numPic == 6) & (d.exp$condition =="Social"),
d.exp$faceIdx6 == d.exp$chosenIdx,
d.exp$faceIdx == d.exp$chosenIdx)
## subset exposure trials, extracting only the relevant columns
d.choseSocial <- subset(d.exp, select=c("subid", "itemNum", "choseSocial", "rt"))
## now merge with test trials by subid and itemNum (itemNum links exposure to test trials)
d.gaze.tar.all <- merge(d.test, d.choseSocial, by=c("subid", "itemNum"), all=TRUE)
length(unique(d.gaze.tar.all$subid)) # check that all subs are still there
# now get the just the trials on which participants selected the target of eye gaze and the no social condition
d.gaze.tar <- subset(d.gaze.tar.all, choseSocial == TRUE | condition == "No-Social", select=c(subid:rt.y))
# sanity checks and descriptives
length(unique(d.gaze.tar$subid))
numSubs.exp <- aggregate(correct ~ subid + condition + intervalNum + numPicN + trialType, data=d.gaze.tar, FUN=mean)
numSubs.exp.summary <- count(numSubs.exp, vars=c("condition", "intervalNum", "numPicN", "trialType"))
## remove trials with RT +/- 2SD on test trials
d.gaze.tar$correct[log(d.gaze.tar$rt.x) > mean(log(d.gaze.tar$rt.x)) + 2* sd(log(d.gaze.tar$rt.x)) |
log(d.gaze.tar$rt.x) < mean(log(d.gaze.tar$rt.x)) - 2* sd(log(d.gaze.tar$rt.x))] <- NA
## remove trials with RT +/- 2SD on exposure trials
# first, remove RTs = 0
d.gaze.tar$rt.y[d.gaze.tar$rt.y==0] <- NA
d.gaze.tar$correct[log(d.gaze.tar$rt.y) > mean(log(d.gaze.tar$rt.y), na.rm=T) + 2* sd(log(d.gaze.tar$rt.y), na.rm=T) |
log(d.gaze.tar$rt.y) < mean(log(d.gaze.tar$rt.y), na.rm=T) - 2* sd(log(d.gaze.tar$rt.y), na.rm=T)] <- NA
# get counts of NAs
count(d.gaze.tar$correct)
# now aggregate to get means
mss.gaze.tar <- aggregate(correct ~ trialType + condition + subid + intervalNum + numPicN, data=d.gaze.tar, FUN=mean, na.action = na.omit)
ms.gaze.tar <- aggregate(correct ~ trialType + condition + intervalNum + numPicN, data=mss.gaze.tar, FUN=mean, na.action = na.omit)
ms.gaze.tar$corr.cih <- aggregate(correct ~ trialType + condition + intervalNum + numPicN, data=mss.gaze.tar, FUN=ci.high, na.action = na.omit)$correct
ms.gaze.tar$corr.cil <- aggregate(correct ~ trialType + condition + intervalNum + numPicN, data=mss.gaze.tar, FUN=ci.low, na.action = na.omit)$correct
# output for models
write.csv(ms.gaze.tar,"~/Documents/Projects/SOC_XSIT/processed_data/aggregate_soc_xsit.csv",row.names=FALSE)
# individual subjects output
write.csv(d.gaze.tar, "~/Documents/Projects/SOC_XSIT/processed_data/indSubs_soc_xsit.csv",row.names=FALSE)
# now plot
quartz(width=10,height=6,title = "Experiment 2 Accuracy: Filtered")
acc_plot <- qplot(x=intervalNum,y=correct, linetype=trialType,
ymin=correct-corr.cil, ymax=correct+corr.cih,
colour=condition,
geom=c("pointrange", "line"),
position=position_dodge(width=.02),
data=ms.gaze.tar) +
facet_grid(. ~ numPicN, labeller=mf_labeller) +
scale_y_continuous(limits = c(0,1),breaks=c(0,.25,.5,.75,1),
name = "Prop. Choosing Repeated Referent") +
scale_x_continuous(limits=c(-.05,7.1), breaks=c(0, 1, 3, 7),
name = "Intervening Trials") +
geom_hline(aes(yintercept=1/numPicN),lty=2) +
theme_bw() +
scale_color_manual(values=c("firebrick1", "dodgerblue"),
name="Experimental\nCondition") +
scale_linetype_manual("Trial Type",
values=c("Switch"=2,"Same"=1)) +
guides(color = guide_legend(keywidth = 2, keyheight = 1,
reverse=T)) +
guides(linetype = guide_legend(keywidth = 2, keyheight = 1)) +
theme(legend.position = "top")
ggsave(acc_plot, path = "/Users/kmacdonald/Documents/Projects/SOC_XSIT/soc_xsit_plots/",
file="acc_test.png", width=5.5, height=4)
## maps levels of variable to
mf_labeller <- function(var, value){
value <- as.character(value)
if (var=="numPicN") {
value[value=="2"] <- "2-Referents"
value[value=="4"] <- "4-Referents"
value[value=="6"] <- "6-Referents"
value[value=="8"] <- "8-Referents"
}
return(value)
}
ow plot
quartz(width=10,height=6,title = "Experiment 2 Accuracy: Filtered")
acc_plot <- qplot(x=intervalNum,y=correct, linetype=trialType,
ymin=correct-corr.cil, ymax=correct+corr.cih,
colour=condition,
geom=c("pointrange", "line"),
position=position_dodge(width=.02),
data=ms.gaze.tar) +
facet_grid(. ~ numPicN, labeller=mf_labeller) +
scale_y_continuous(limits = c(0,1),breaks=c(0,.25,.5,.75,1),
name = "Prop. Choosing Repeated Referent") +
scale_x_continuous(limits=c(-.05,7.1), breaks=c(0, 1, 3, 7),
name = "Intervening Trials") +
geom_hline(aes(yintercept=1/numPicN),lty=2) +
theme_bw() +
scale_color_manual(values=c("firebrick1", "dodgerblue"),
name="Experimental\nCondition") +
scale_linetype_manual("Trial Type",
values=c("Switch"=2,"Same"=1)) +
guides(color = guide_legend(keywidth = 2, keyheight = 1,
reverse=T)) +
guides(linetype = guide_legend(keywidth = 2, keyheight = 1)) +
theme(legend.position = "top")
acc_plot
m1.l3 <- glmer(correct ~ (trialType + condition +
log2(intervalNum + 1) + log2(numPicN))^3 +
(trialType | subid),
data=d.gaze.tar, family=binomial, nAGQ=0)
summary(m1.l3)
str(d.gaze.tar)
m1.l3.sub <- glmer(correct ~ trialType * condition +
(trialType | subid),
data=subset(d.gaze.tar, intervalNum==0 & numPic==4), family=binomial, nAGQ=0)
m1.l3.sub
summary(m1.l3.sub)
## get number of subjects in each condition
numSubs <- aggregate(correct ~ subid + condition + intervalNum + numPicN, data=d, FUN=mean)
numSubs.summary <- count(numSubs, vars=c("condition", "intervalNum", "numPicN"))
numSubs.summary
m1.l <- glmer(correct ~ trialType * condition + (1|subid),
data=d1.test.choseGazeTar, family=binomial)
summary(m1.l)
