x[length(x)] <- gsub("</ul>\\}]","",x[length(x)])
x <- gsub("^.*?: ","",x)
#grab date
date <- str_sub(filename,20,36)
date <- gsub('_','',date)
date <- gsub('\\.','',date)
#grab id
id <- str_sub(filename,0,2)
id <- gsub('-','',id)
#bind to data frame
x <- as.data.frame(matrix(x,14,10,byrow=TRUE), stringsAsFactors=F)
x$V11 <- date
x$V12 <- id
x$V13 <- condition
return(x) ## need this return to get the data frame!
}
#apply munging function to each kid's data file
all.data <- ldply(
.data = all_results,
.fun = bing_clean
)
#add variable names to columns
names(all.data) <- c("itemNum","trialType","samePos","chosen","chosen_idx",
"kept","kept_idx","rt","faceVid","faceIdx", "date", "id", "condition")
#dplyr syntax
all.data <- all.data %>%
group_by(date) %>%
mutate(trial = c(1:14)) %>%
mutate(example_trial = ifelse(trial %in% c(1:2),1,0),
exposure_trial = ifelse(trial %in% c(3,5,7,9,11,13),1,0),
test_trial = ifelse(trial %in% c(4,6,8,10,12,14),1,0)) %>%
arrange(date, trial)
#find whether child's choice was correct
#for exposure trials, we check the index of eye gaze against child's choice
#for test trials, we check the kept image against the child's choice
all.data <- all.data %>%
group_by(id) %>%
mutate(correct = ifelse(exposure_trial == 1, chosen_idx == faceIdx,
ifelse(example_trial == 1, chosen[1] == "flower" & chosen[2] == "truck",
chosen == kept)))
#relabel variables and variable types for analysis
all.data$rt <- as.integer(all.data$rt)
all.data$condition <- as.factor(all.data$condition)
View(all.data)
#read in demo csv
demo <- read.csv("/Users/kmacdonald/Documents/Projects/SOC_XSIT/raw_data/child/soc-xsit-ipad-demo.csv")
all.data <- join(all.data,demo)
#reorder columns to put id and demo variables first
all.data <- all.data[c("id","birthday","gender","age","age.group","date", "condition",
"trial","itemNum","trialType","samePos","chosen","chosen_idx","kept",
"kept_idx","rt","faceVid","faceIdx","example_trial",
"exposure_trial","test_trial")]
View(all.data)
exposure.trials <- all.data %>%
filter(exposure_trial == 1) %>%
mutate(trial_type_redo = ifelse(chosen == kept,1,0)) %>%
select(itemNum, trialType, id)
View(exposure.trials)
exposure.trials <- all.data %>%
filter(exposure_trial == 1) %>%
mutate(trial_type_redo = ifelse(chosen == kept,1,0)) %>%
select(itemNum, trial_type_redo, id)
View(exposure.trials)
temp <- join(test.trials,exposure.trials, by=c("id","itemNum"))
View(temp)
exposure.trials <- all.data %>%
filter(exposure_trial == 1) %>%
mutate(trial_type_redo = ifelse(chosen == kept,1,0)) %>%
select(itemNum, trial_type_redo, id)
test.trials <- all.data %>%
filter(test_trial == 1)
temp <- join(test.trials,exposure.trials, by=c("id","itemNum"))
View(test.trials)
View(test.trials.temp)
View(temp)
exposure.trials <- all.data %>%
filter(exposure_trial == 1) %>%
mutate(trial_type_redo = ifelse(chosen == kept,1,2)) %>%
select(itemNum, trial_type_redo, id)
test.trials <- all.data %>%
filter(test_trial == 1)
temp <- join(test.trials,exposure.trials, by=c("id","itemNum"))
View(temp)
test.trials$trial_type_redo <- factor(test.trials$trialType, labels = c('Same','Switch'))
View(test.trials)
View(all.data)
View(exposure.trials)
exposure.trials <- all.data %>%
filter(exposure_trial == 1) %>%
mutate(trial_type_redo = ifelse(chosen == kept,1,2)) %>%
select(itemNum, trial_type_redo, id, chosen, kept)
View(exposure.trials)
test.trials <- all.data %>%
filter(test_trial == 1)
?merge()
test.trials <- join(test.trials,exposure.trials, by=c("id","itemNum"))
View(test.trials)
library(plyr)
library(dplyr)
library(directlabels)
library(stringr)
# Create empty arrays for binding
all.data <- as.data.frame(matrix(ncol = 0, nrow = 0))
#grab all file names from data dir.
#These are all of the kids for whom we have ipad data
all_results <- list.files(path = "/Users/kmacdonald/Documents/Projects/SOC_XSIT/raw_data/child/",
pattern = 'results_*', all.files = FALSE)
#function to munge the data
#takes in a list of filenames (.txt of each kid's data),
#strips html escape characters, and grabs the relevant info for each trial
#returns data frame with all the data
bing_clean <- function(filename) {
x <- readLines(paste("/Users/kmacdonald/Documents/Projects/SOC_XSIT/raw_data/child/",
filename,sep=""),warn=FALSE)
x <- unlist(strsplit(x,'<li>'))
#grab condition
condition <- x[3]
if (grepl(pattern="Social", condition)) {
condition <- str_extract(pattern="Social", condition)
} else {
condition <- str_extract(pattern="No-social", condition)
}
# grab trial information
x <- x[11:150]
#strip html characters
x <- gsub('\\"',"", x)
x <- gsub("\\\\\"","",x)
x <- gsub("</li>","",x)
x <- gsub("</ul>\\},\\{<ul>","",x)
x[length(x)] <- gsub("</ul>\\}]","",x[length(x)])
x <- gsub("^.*?: ","",x)
#grab date
date <- str_sub(filename,20,36)
date <- gsub('_','',date)
date <- gsub('\\.','',date)
#grab id
id <- str_sub(filename,0,2)
id <- gsub('-','',id)
#bind to data frame
x <- as.data.frame(matrix(x,14,10,byrow=TRUE), stringsAsFactors=F)
x$V11 <- date
x$V12 <- id
x$V13 <- condition
return(x) ## need this return to get the data frame!
}
#apply munging function to each kid's data file
all.data <- ldply(
.data = all_results,
.fun = bing_clean
)
#add variable names to columns
names(all.data) <- c("itemNum","trialType","samePos","chosen","chosen_idx",
"kept","kept_idx","rt","faceVid","faceIdx", "date", "id", "condition")
#dplyr syntax
all.data <- all.data %>%
group_by(date) %>%
mutate(trial = c(1:14)) %>%
mutate(example_trial = ifelse(trial %in% c(1:2),1,0),
exposure_trial = ifelse(trial %in% c(3,5,7,9,11,13),1,0),
test_trial = ifelse(trial %in% c(4,6,8,10,12,14),1,0)) %>%
arrange(date, trial)
#find whether child's choice was correct
#for exposure trials, we check the index of eye gaze against child's choice
#for test trials, we check the kept image against the child's choice
all.data <- all.data %>%
group_by(id) %>%
mutate(correct = ifelse(exposure_trial == 1, chosen_idx == faceIdx,
ifelse(example_trial == 1, chosen[1] == "flower" & chosen[2] == "truck",
chosen == kept)))
#relabel variables and variable types for analysis
all.data$rt <- as.integer(all.data$rt)
all.data$condition <- as.factor(all.data$condition)
View(all.data)
#read in demo csv
demo <- read.csv("/Users/kmacdonald/Documents/Projects/SOC_XSIT/raw_data/child/soc-xsit-ipad-demo.csv")
all.data <- join(all.data,demo)
#reorder columns to put id and demo variables first
all.data <- all.data[c("id","birthday","gender","age","age.group","date", "condition",
"trial","itemNum","trialType","samePos","chosen","chosen_idx","kept",
"kept_idx","rt","faceVid","faceIdx","example_trial",
"exposure_trial","test_trial", "correct")]
View(all.data)
?mutate()
names(expos)
exposure.trials <- all.data %>%
filter(exposure_trial == 1)
names(exposure.trials)
```{r relabel trial types}
exposure.trials <- all.data %>%
filter(exposure_trial == 1) %>%
mutate(
trial_type_redo = ifelse(chosen == kept,1,2),
chosen = chosen_exposure,
kept = kept_exposure,
correct = correct_exposure
)
View(exposure.trials)
exposure.trials <- all.data %>%
filter(exposure_trial == 1) %>%
mutate(
trial_type_redo = ifelse(chosen == kept,1,2),
chosen = chosen_exposure,
kept = kept_exposure,
correct = correct_exposure
)
exposure.trials <- all.data %>%
filter(exposure_trial == 1) %>%
mutate(
trial_type_redo = ifelse(chosen == kept,1,2),
chosen_exposure = chosen)
View(exposure.trials)
exposure.trials <- all.data %>%
filter(exposure_trial == 1) %>%
mutate(trial_type_redo = ifelse(chosen == kept,1,2)) %>%
select(id, trial_type_redo, chosen_exposure = chosen,
kept_exposure = kept, correct_exposure = correct)
View(exposure.trials)
test.trials <- all.data %>%
filter(test_trial == 1)
test.trials <- join(test.trials,exposure.trials, by=c("id","itemNum"))
?join()
library(plyr)
library(dplyr)
library(directlabels)
library(stringr)
# Create empty arrays for binding
all.data <- as.data.frame(matrix(ncol = 0, nrow = 0))
#grab all file names from data dir.
#These are all of the kids for whom we have ipad data
all_results <- list.files(path = "/Users/kmacdonald/Documents/Projects/SOC_XSIT/raw_data/child/",
pattern = 'results_*', all.files = FALSE)
#function to munge the data
#takes in a list of filenames (.txt of each kid's data),
#strips html escape characters, and grabs the relevant info for each trial
#returns data frame with all the data
bing_clean <- function(filename) {
x <- readLines(paste("/Users/kmacdonald/Documents/Projects/SOC_XSIT/raw_data/child/",
filename,sep=""),warn=FALSE)
x <- unlist(strsplit(x,'<li>'))
#grab condition
condition <- x[3]
if (grepl(pattern="Social", condition)) {
condition <- str_extract(pattern="Social", condition)
} else {
condition <- str_extract(pattern="No-social", condition)
}
# grab trial information
x <- x[11:150]
#strip html characters
x <- gsub('\\"',"", x)
x <- gsub("\\\\\"","",x)
x <- gsub("</li>","",x)
x <- gsub("</ul>\\},\\{<ul>","",x)
x[length(x)] <- gsub("</ul>\\}]","",x[length(x)])
x <- gsub("^.*?: ","",x)
#grab date
date <- str_sub(filename,20,36)
date <- gsub('_','',date)
date <- gsub('\\.','',date)
#grab id
id <- str_sub(filename,0,2)
id <- gsub('-','',id)
#bind to data frame
x <- as.data.frame(matrix(x,14,10,byrow=TRUE), stringsAsFactors=F)
x$V11 <- date
x$V12 <- id
x$V13 <- condition
return(x) ## need this return to get the data frame!
}
#apply munging function to each kid's data file
all.data <- ldply(
.data = all_results,
.fun = bing_clean
)
#add variable names to columns
names(all.data) <- c("itemNum","trialType","samePos","chosen","chosen_idx",
"kept","kept_idx","rt","faceVid","faceIdx", "date", "id", "condition")
#dplyr syntax
all.data <- all.data %>%
group_by(date) %>%
mutate(trial = c(1:14)) %>%
mutate(example_trial = ifelse(trial %in% c(1:2),1,0),
exposure_trial = ifelse(trial %in% c(3,5,7,9,11,13),1,0),
test_trial = ifelse(trial %in% c(4,6,8,10,12,14),1,0)) %>%
arrange(date, trial)
#find whether child's choice was correct
#for exposure trials, we check the index of eye gaze against child's choice
#for test trials, we check the kept image against the child's choice
all.data <- all.data %>%
group_by(id) %>%
mutate(correct = ifelse(exposure_trial == 1, chosen_idx == faceIdx,
ifelse(example_trial == 1, chosen[1] == "flower" & chosen[2] == "truck",
chosen == kept)))
#relabel variables and variable types for analysis
all.data$rt <- as.integer(all.data$rt)
all.data$condition <- as.factor(all.data$condition)
#read in demo csv
demo <- read.csv("/Users/kmacdonald/Documents/Projects/SOC_XSIT/raw_data/child/soc-xsit-ipad-demo.csv")
all.data <- join(all.data,demo)
#reorder columns to put id and demo variables first
all.data <- all.data[c("id","birthday","gender","age","age.group","date", "condition",
"trial","itemNum","trialType","samePos","chosen","chosen_idx","kept",
"kept_idx","rt","faceVid","faceIdx","example_trial",
"exposure_trial","test_trial", "correct")]
exposure.trials <- all.data %>%
filter(exposure_trial == 1) %>%
mutate(trial_type_redo = ifelse(chosen == kept,1,2)) %>%
select(id, trial_type_redo, chosen_exposure = chosen,
kept_exposure = kept, correct_exposure = correct)
View(exposure.trials)
test.trials <- all.data %>%
filter(test_trial == 1)
?cbind
temp <- inner_join(test.trials,exposure.trials, by=c("id","itemNum"))
names(test.trials)
names(exposure.trials)
temp <- inner_join(test.trials,exposure.trials, by="id")
View(temp)
temp <- left_join(test.trials,exposure.trials, by="id")
temp <- left_join(test.trials,exposure.trials, by="id")
temp <- semi_join(test.trials,exposure.trials, by="id")
temp <- join(test.trials,exposure.trials, by="id")
rm(temp)
temp <- join(test.trials,exposure.trials, by="id")
?merge()
temp <- merge(test.trials,exposure.trials, by="id")
temp <- merge(test.trials,exposure.trials, by="id", all.y=F)
temp <- merge(test.trials,exposure.trials, by="id", all.x=F)
exposure.trials <- all.data %>%
filter(exposure_trial == 1) %>%
mutate(trial_type_redo = ifelse(chosen == kept,1,2)) %>%
select(id, itemNum, trial_type_redo, chosen_exposure = chosen,
kept_exposure = kept, correct_exposure = correct)
test.trials <- all.data %>%
filter(test_trial == 1)
temp <- join(test.trials,exposure.trials, by=c("id","itemNum"))
View(temp)
exposure.trials <- all.data %>%
filter(exposure_trial == 1) %>%
mutate(trial_type_redo = ifelse(chosen == kept,1,2)) %>%
select(id, itemNum, trial_type_redo, chosen_exposure = chosen,
kept_exposure = kept, correct_exposure = correct)
test.trials <- all.data %>%
filter(test_trial == 1)
test.trials <- join(test.trials,exposure.trials, by=c("id","itemNum"))
test.trials$trial_type_redo <- factor(test.trials$trial_type_redo,
labels = c('Same','Switch'))
View(test.trials)
View(all.data)
View(test.trials)
write.csv(all.data, file="/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/child/soc-xsit-ipad-alldata.csv")
write.csv(test.trials, file="/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/child/soc-xsit-ipad-testdata.csv")
library(ggplot)
library(dplyr)
library(bootstrap)
library(lme4)
library(ggplot2)
source("/Users/kmacdonald/Documents/Projects/SOC_XSIT/XSIT-MIN/analysis/Ranalysis/useful.R")
data.all <- read.csv("/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/child/soc-xsit-ipad-alldata.csv")
data.test <- read.csv("/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/child/soc-xsit-ipad-testdata.csv")
?count
names(data.test)
View(data.test)
summarise(data.test,subs=n_distinct(id))
summarise(data.test, n_subjects = n_distinct(id))
data.test %>%
group_by(id) %>%
summarise(
n_subjects = n_()
)
data.test %>%
group_by(id) %>%
summarise(
n_subjects = n()
)
data.test %>%
group_by(id) %>%
summarise(
n_subjects = n(id)
)
data.test %>%
group_by(id) %>%
summarise(
n_subjects = n_distinct(id)
)
summarise(n_subjects = n())
summarise(data.test,n_subjects = n())
summarise(data.test,n_subjects = n_distinct(id))
names(data.tes)
names(data.test)
conditions <- group_by(data.test, condition)
View(conditions)
conditions
summarise(conditions,
n_subjects = n()
)
summarise(conditions,
n_subjects = n_distinct()
)
summarise(conditions,
n_subjects = n_distinct(id)
)
summarise(subjects,
n_trials = n_distinct(trial_type_redo)
)
subjects <- group_by(data.test, id)
summarise(subjects,
n_trials = n_distinct(trial_type_redo)
)
summarise(subjects,
n_trials = n()
)
summarise(data.test, n_subjects = n_distinct(id))
summarise(conditions,
n_subjects = n_distinct(id)
)
temp <- data.test %>%
group_by(id) %>%
group_by(trial_type_redo) %>%
summarise(n_trials = n()
temp <- data.test %>%
group_by(id) %>%
group_by(trial_type_redo) %>%
summarise(n_trials = n())
View(temp)
data.test %>%
group_by(id) %>%
summarise(n_trials = n())
data.test %>%
group_by(id, trial_type_redo) %>%
summarise(n_trials = n())
data.test %>%
group_by(id, trial_type_redo) %>%
summarise(n_trials = n())
#Get the number of subjects
summarise(data.test, n_subjects = n_distinct(id))
#Get condition breakdown
conditions <- group_by(data.test, condition)
summarise(conditions,
n_subjects = n_distinct(id)
)
#Get trials break down for each subject
subjects <- group_by(id, trial_type_redo) %>%
summarise(subjects,
n_trials = n()
)
summarise(data.test, n_subjects = n_distinct(id))
#Get condition breakdown
conditions <- group_by(data.test, condition)
summarise(conditions,
n_subjects = n_distinct(id)
)
#Get trials break down for each subject
subjects <- group_by(id, trial_type_redo)
summarise(subjects,
n_trials = n()
)
?group_by
summarise(data.test_df, n_subjects = n_distinct(id))
data.all_df <- read.csv("/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/child/soc-xsit-ipad-alldata.csv")
data.test_df <- read.csv("/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/child/soc-xsit-ipad-testdata.csv")
summarise(data.test_df, n_subjects = n_distinct(id))
conditions <- group_by(data.test_df, condition)
summarise(conditions,
n_subjects = n_distinct(id)
)
subjects <- group_by(data.test_df, id, trial_type_redo)
summarise(subjects,
n_trials = n()
)
total_n <- summarise(data.test_df, n_subjects = n_distinct(id))
View(total_n)
total_n
cond_breakdown <- summarise(conditions,
n_subjects = n_distinct(id)
)
View(cond_breakdown)
total_n <- summarise(data.test_df, n_subjects = n_distinct(id))
total_n
conditions <- group_by(data.test_df, condition)
cond_breakdown <- summarise(conditions,
n_subjects = n_distinct(id)
)
cond_breakdown
data.test %>%
group_by(condition) %>%
summarise(n_subjects = n_distinct(id)) %>%
print()
data.test_df %>%
group_by(condition) %>%
summarise(n_subjects = n_distinct(id)) %>%
print()
?summarise
data.test_df %>%
group_by(id, trial_type_redo) %>%
summarise(n_trial = n()) %>%
print()
data.all_df <- read.csv("/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/child/soc-xsit-ipad-alldata.csv")
data.test_df <- read.csv("/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/child/soc-xsit-ipad-testdata.csv")
data.test_df %>%
group_by(id, trial_type_redo) %>%
summarise(n_trial = n()) %>%
print()
names(data.test_df)
data.test_df %>%
group_by(condition, age.group) %>%
summarise(n_subject = n_distinct(id)) %>%
print()
data.test_df %>%
group_by( age.group, condition) %>%
summarise(n_subject = n_distinct(id)) %>%
print()
