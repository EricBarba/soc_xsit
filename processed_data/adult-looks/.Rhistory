ci_high = ci.high(correct_exposure))
ms_expo_within$condition <- factor(ms_expo_within$condition)
ms_expo_within_filt$condition <- factor(ms_expo_within_filt$condition)
acc_exp_within <- ggplot(data=ms_expo_within,
aes(x=condition, y=accuracy_exposure)) +
geom_bar(stat="identity", fill = I("grey50")) +
geom_pointrange(aes(ymin=accuracy_exposure-ci_low,
ymax=accuracy_exposure+ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
ggtitle("Proportion chose target of eye gaze \n Schematic/Unfiltered")
acc_exp_within_filt <- ggplot(data=ms_expo_within_filt,
aes(x=condition, y=accuracy_exposure)) +
geom_bar(stat="identity", fill = I("grey50")) +
geom_pointrange(aes(ymin=accuracy_exposure-ci_low,
ymax=accuracy_exposure+ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
ggtitle("Proportion chose target of eye gaze \n Schematic/Filtered")
multiplot(acc_exp_within, acc_exp_within_filt, cols=2)
#Apply different filters
sub_level_filter <- filter(d_within_test_df,
include_good_rt == 1, include_expo == 1,
condition_trial == "social")
trial_level_filter <- filter(d_within_test_df,
include_good_rt == 1, condition_trial == "social")
mss_expo_within_sub_lev <- sub_level_filter %>%
group_by(condition, condition_trial, subids) %>%
summarise(accuracy_exposure = mean(correct_exposure))
mss_expo_within_trial_lev <- trial_level_filter %>%
group_by(condition, condition_trial, subids) %>%
summarise(accuracy_exposure = mean(correct_exposure))
sub_hist <- qplot(accuracy_exposure, geom="bar",
facets=.~condition, data=mss_expo_within_sub_lev)
trial_hist <- qplot(accuracy_exposure, geom="bar",facets=.~condition,
main = c("Histogram Acc Exposure (Schematic)"),
data=mss_expo_within_trial_lev)
trial_hist
dss <- d_within_test_df %>% filter(include_good_rt == 1,
include_expo == 1,
condition_trial == "social") %>%
group_by(condition, condition_trial, trial.num) %>%
summarise(accuracy_exposure = mean(correct_exposure))
qplot(trial.num, accuracy_exposure, col=condition, facets=.~condition,
geom=c("point","line"),
data=dss) +
scale_y_continuous(limits=c(0,1))
#Set up filters
inc.data.within_sub_level <- filter(d_within_test_df, include_good_rt == 1, include_expo == 1)
inc.data.within_trial_level <- filter(d_within_test_df, include_good_rt == 1 &
correct_exposure == TRUE & include_expo == 1 |
condition_trial == "no-social")
inc.data.within_unfilt <- filter(d_within_test_df, include_good_rt == 1)
#Set up filters
inc.data.within_sub_level <- filter(d_within_test_df, include_good_rt == 1, include_expo == 1)
inc.data.within_trial_level <- filter(d_within_test_df, include_good_rt == 1 &
correct_exposure == TRUE & include_expo == 1 |
condition_trial == "no-social")
inc.data.within_unfilt <- filter(d_within_test_df, include_good_rt == 1)
##Subject level
ms_test_within_sub_level <- inc.data.within_sub_level %>%
group_by(condition, condition_trial, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
ms_test_within_sub_level$condition <- factor(ms_test_within_sub_level$condition)
ms_test_within_sub_level$condition_trial <- factor(ms_test_within_sub_level$condition_trial,
levels = c("social", "no-social"))
acc_test_within_blocks_sub_level <- ggplot(ms_test_within_sub_level,
aes(x=condition_trial, y=accuracy,
group=trialType, colour=trialType)) +
geom_point(size=2) +
geom_line() +
geom_pointrange(aes(ymin=accuracy - ci_low,
ymax=accuracy + ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
facet_wrap(~condition) +
ggtitle("Within-subs Subject-level")
##Trial level
ms_test_within_trial_level <- inc.data.within_trial_level %>%
group_by(condition, condition_trial, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
ms_test_within_trial_level$condition <- factor(ms_test_within_trial_level$condition)
ms_test_within_trial_level$condition_trial <- factor(ms_test_within_trial_level$condition_trial,
levels = c("social", "no-social"))
acc_test_within_blocks_trial_level <- ggplot(ms_test_within_trial_level,
aes(x=condition_trial, y=accuracy,
group=trialType, colour=trialType)) +
geom_point(size=2) +
geom_line() +
geom_pointrange(aes(ymin=accuracy - ci_low,
ymax=accuracy + ci_high), width=.1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
facet_wrap(~condition) +
ggtitle("Within-subs-Trial-Level")
##Unfiltered
ms_test_within_unfilt <- inc.data.within_unfilt %>%
group_by(condition, condition_trial, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
ms_test_within_unfilt$condition <- factor(ms_test_within_unfilt$condition)
ms_test_within_unfilt$condition_trial <- factor(ms_test_within_unfilt$condition_trial,
levels = c("social", "no-social"))
acc_test_within_blocks_unfilt <- ggplot(ms_test_within_unfilt,
aes(x=condition_trial, y=accuracy,
group=trialType, colour=trialType)) +
geom_point(size=2) +
geom_line() +
geom_pointrange(aes(ymin=accuracy - ci_low,
ymax=accuracy + ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
facet_wrap(~condition) +
ggtitle("Within-subs Unfiltered")
multiplot(acc_test_within_blocks_sub_level, acc_test_within_blocks_trial_level,
acc_test_within_blocks_unfilt, cols = 2)
#Computations
ms_test_within_collapse <- inc.data.within_sub_level %>%
group_by(condition_trial, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
ms_test_within_collapse_trial <- inc.data.within_trial_level %>%
group_by(condition_trial, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
ms_test_within_collapse_unfilt <- inc.data.within_unfilt %>%
group_by(condition_trial, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
#refactor things for plotting
ms_test_within_collapse$condition_trial <- factor(ms_test_within_collapse$condition_trial,
levels = c("social", "no-social"))
ms_test_within_collapse_trial$condition_trial <- factor(ms_test_within_collapse_trial$condition_trial,
levels = c("social", "no-social"))
ms_test_within_collapse_unfilt$condition_trial <- factor(ms_test_within_collapse_unfilt$condition_trial,
levels = c("social", "no-social"))
#now plot
acc_test_within_sub <- ggplot(ms_test_within_collapse,
aes(x=condition_trial, y=accuracy,
group=trialType, colour=trialType)) +
geom_point(size=2) +
geom_line() +
geom_pointrange(aes(ymin=accuracy - ci_low,
ymax=accuracy + ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
ggtitle("Within-subs Subject Filter")
acc_test_within_trial <- ggplot(ms_test_within_collapse_trial,
aes(x=condition_trial, y=accuracy,
group=trialType, colour=trialType)) +
geom_point(size=2) +
geom_line() +
geom_pointrange(aes(ymin=accuracy - ci_low,
ymax=accuracy + ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
ggtitle("Within-subs Trial Filter")
acc_test_within_unfilt <- ggplot(ms_test_within_collapse_unfilt,
aes(x=condition_trial, y=accuracy,
group=trialType, colour=trialType)) +
geom_point(size=2) +
geom_line() +
geom_pointrange(aes(ymin=accuracy - ci_low,
ymax=accuracy + ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
ggtitle("Within-subs Unfiltered")
multiplot(acc_test_within_sub, acc_test_within_trial, acc_test_within_unfilt, cols=2)
m1_within <- glmer(correct ~ trialType * condition_trial + (trialType | subids),
data = inc.data.within_trial_level,
family=binomial)
summary(m1_within)
m1_within_unfilt <- glmer(correct ~ trialType * condition_trial + (trialType | subids),
data = inc.data.within_unfilt,
family=binomial)
summary(m1_within_unfilt)
d_within_rep_df <- filter(d.all_df, experiment == "within_replication")
d_within_rep_df %>%
group_by(condition) %>%
summarise(n_subs = n_distinct(subids))
d_within_rep_df <- d_within_rep_df %>%
mutate(condition_trial = ifelse(condition == "No-socialFirst"
& trial.num <= 20, "no-social",
ifelse(condition == "SocialFirst"
& trial.num <= 20, "social",
ifelse(condition == "No-socialFirst"
& trial.num >= 21, "social",
ifelse(condition == "SocialFirst"
& trial.num >= 21,
"no-social", NA)))))
#flag trial, if subs chose target of gaze
d_within_rep_expo_df <- d_within_rep_df %>%
filter(exposure_trial == 1) %>%
mutate(correct_exposure = faceIdx == chosenIdx) %>%
select(subids, itemNum, correct_exposure)
#grab test trials
d_within_rep_test_df <- d_within_rep_df %>%
filter(test_trial == 1)
#merge with test trials
d_within_rep_test_df <- join(d_within_rep_test_df, d_within_rep_expo_df, c("subids", "itemNum"))
d_within_rep_test_df <- d_within_rep_test_df %>%
filter(condition_trial == "social") %>%
group_by(subids) %>%
summarise(mean_acc_exp = mean(correct_exposure)) %>%
mutate(include_expo = ifelse(mean_acc_exp > 0.25,1,0)) %>%
join(d_within_rep_test_df, by = "subids")
d_within_rep_test_df <- d_within_rep_test_df %>%
mutate(include_good_rt = ifelse(log(rt) > mean(log(rt)) + 2 * sd(log(rt)) |
log(rt) < mean(log(rt)) - 2 * sd(log(rt)),
0,1))
d_within_expo_rep <- filter(d_within_rep_test_df,
include_good_rt == 1,
condition_trial == "social")
d_within_expo_rep_filt <- filter(d_within_rep_test_df,
include_good_rt == 1, include_expo == 1,
condition_trial == "social")
#get number of subjects filtered out
within_n_rep<- d_within_expo_rep %>%
summarise(n_subs = n_distinct(subids))
within_n_filt_rep <- d_within_expo_rep_filt %>%
summarise(n_subs_filt = n_distinct(subids)) %>%
select(n_subs_filt)
cbind(within_n_rep, within_n_filt_rep)
ms_expo_within_rep <-  d_within_expo_rep %>%
group_by(condition, condition_trial) %>%
summarise(accuracy_exposure = mean(correct_exposure),
ci_low = ci.low(correct_exposure),
ci_high = ci.high(correct_exposure))
ms_expo_within_rep_filt <- d_within_expo_rep_filt %>%
group_by(condition, condition_trial) %>%
summarise(accuracy_exposure = mean(correct_exposure),
ci_low = ci.low(correct_exposure),
ci_high = ci.high(correct_exposure))
#factor for plotting
ms_expo_within_rep$condition <- factor(ms_expo_within_rep$condition)
ms_expo_within_rep_filt$condition <- factor(ms_expo_within_rep_filt$condition)
acc_expo_within_rep <- ggplot(data=ms_expo_within_rep,
aes(x=condition, y=accuracy_exposure,
fill=condition)) +
geom_bar(stat="identity") +
geom_pointrange(aes(ymin=accuracy_exposure-ci_low,
ymax=accuracy_exposure+ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
ggtitle("Within-subs Replication Unfiltered")
acc_expo_within_rep_filt <- ggplot(data=ms_expo_within_rep_filt,
aes(x=condition, y=accuracy_exposure,
fill=condition)) +
geom_bar(stat="identity") +
geom_pointrange(aes(ymin=accuracy_exposure-ci_low,
ymax=accuracy_exposure+ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
ggtitle("Within-subs Replication Filtered")
multiplot(acc_expo_within_rep, acc_expo_within_rep_filt, cols=2)
#subject filter
inc.data.within_rep_sub_level <- filter(d_within_rep_test_df, include_good_rt == 1, include_expo == 1 &
correct_exposure == TRUE | condition_trial == "no-social")
#trial filter
inc.data.within_rep_trial_level <- filter(d_within_rep_test_df, include_good_rt == 1 &
correct_exposure == TRUE | condition_trial == "no-social")
#unfiltered
inc.data.within_rep_unfilt <- filter(d_within_rep_test_df, include_good_rt == 1)
#accuracy computations
ms_test_within_rep_sub_level <- inc.data.within_rep_sub_level %>%
group_by(condition, condition_trial, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
ms_test_within_rep_sub_level$condition <- factor(ms_test_within_rep_sub_level$condition)
ms_test_within_rep_sub_level$condition_trial <- factor(ms_test_within_rep_sub_level$condition_trial,
levels = c("social", "no-social"))
acc_test_within_rep_blocks_sub_level <- ggplot(ms_test_within_rep_sub_level,
aes(x=condition_trial, y=accuracy,
group=trialType, colour=trialType)) +
geom_point(size=2) +
geom_line() +
geom_pointrange(aes(ymin=accuracy - ci_low,
ymax=accuracy + ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
facet_wrap(~condition) +
ggtitle("Within-subs Replication Subject Level")
ms_test_within_rep_trial_level <- inc.data.within_rep_trial_level %>%
group_by(condition, condition_trial, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
ms_test_within_rep_trial_level$condition <- factor(ms_test_within_rep_trial_level$condition)
ms_test_within_rep_trial_level$condition_trial <- factor(ms_test_within_rep_trial_level$condition_trial,
levels = c("social", "no-social"))
acc_test_within_rep_blocks_trial_level <- ggplot(ms_test_within_rep_trial_level,
aes(x=condition_trial, y=accuracy,
group=trialType, colour=trialType)) +
geom_point(size=2) +
geom_line() +
geom_pointrange(aes(ymin=accuracy - ci_low,
ymax=accuracy + ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
facet_wrap(~condition) +
ggtitle("Within-subs Replication blocks")
multiplot(acc_test_within_rep_blocks_sub_level, acc_test_within_rep_blocks_trial_level)
ms_test_within_rep_collapse_sub <- inc.data.within_rep_sub_level %>%
group_by(condition_trial, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
ms_test_within_rep_collapse_trial <- inc.data.within_rep_trial_level %>%
group_by(condition_trial, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
ms_test_within_rep_collapse_unfilt <- inc.data.within_rep_unfilt %>%
group_by(condition_trial, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
ms_test_within_rep_collapse_sub$condition_trial <- factor(ms_test_within_rep_collapse_sub$condition_trial,
levels = c("social", "no-social"))
ms_test_within_rep_collapse_trial$condition_trial <- factor(ms_test_within_rep_collapse_trial$condition_trial,
levels = c("social", "no-social"))
ms_test_within_rep_collapse_unfilt$condition_trial <- factor(ms_test_within_rep_collapse_unfilt$condition_trial,
levels = c("social", "no-social"))
# subject filter
acc_test_within_rep_sub <- ggplot(ms_test_within_rep_collapse_sub,
aes(x=condition_trial, y=accuracy,
group=trialType, colour=trialType)) +
geom_point(size=2) +
geom_line() +
geom_pointrange(aes(ymin=accuracy - ci_low,
ymax=accuracy + ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
ggtitle("Within-subs Replication Sub-level")
# trial filter
acc_test_within_rep_trial <- ggplot(ms_test_within_rep_collapse_trial,
aes(x=condition_trial, y=accuracy,
group=trialType, colour=trialType)) +
geom_point(size=2) +
geom_line() +
geom_pointrange(aes(ymin=accuracy - ci_low,
ymax=accuracy + ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
ggtitle("Within-subs Replication Trial-level")
#unfiltered
acc_test_within_rep_unfilt <- ggplot(ms_test_within_rep_collapse_unfilt,
aes(x=condition_trial, y=accuracy,
group=trialType, colour=trialType)) +
geom_point(size=2) +
geom_line() +
geom_pointrange(aes(ymin=accuracy - ci_low,
ymax=accuracy + ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
ggtitle("Within-subs Replication Unfiltered")
multiplot(acc_test_within_rep_sub, acc_test_within_rep_trial, acc_test_within_rep_unfilt, cols=2)
d.noisy <- filter(d.test_df, experiment == "noisy_channel")
d.noisy %>%
group_by(experiment, condition, gazeLength) %>%
summarise(n_subs = n_distinct(subids))
ms_exp_noisy <- d.noisy %>%
filter(condition != "No-social") %>%
group_by(condition, gazeLength) %>%
summarise(accuracy_exposure = mean(correct_exposure),
ci_low = ci.low(correct_exposure),
ci_high = ci.high(correct_exposure))
noisy_acc_exp <- ggplot(data=ms_exp_noisy,
aes(x=gazeLength, y=accuracy_exposure,
fill=gazeLength)) +
geom_bar(stat="identity") +
geom_pointrange(aes(ymin=accuracy_exposure-ci_low,
ymax=accuracy_exposure+ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
ggtitle("Unfiltered")
noisy_acc_exp
ms_exp_noisy
ms_test_noisy <- d.noisy.filt %>%
group_by(gazeLength, condition, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
#create new condition column for plotting
ms_test_noisy <- ms_test_noisy %>%
mutate(condition_full = paste(gazeLength, condition, sep="-"))
#change factor levels for plotting
ms_test_noisy$condition_full <- factor(ms_test_noisy$condition_full,
levels = c("Short-Social", "Noisy-Social", "Short-No-social"))
acc.test.noisy <- ggplot(ms_test_noisy, aes(x=condition_full, y=accuracy,
group=trialType, colour=trialType)) +
geom_point(size=2) +
geom_line() +
geom_pointrange(aes(ymin=accuracy - ci_low,
ymax=accuracy + ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
ggtitle("Noisy Channel Test accuracy")
ms_test_noisy <- d.noisy.filt %>%
group_by(gazeLength, condition, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
d.noisy.filt <- filter(d.noisy,include_good_rt == 1,
include_expo == 1 & correct_exposure == T |
condition == "No-social")
ms_test_noisy <- d.noisy.filt %>%
group_by(gazeLength, condition, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
#create new condition column for plotting
ms_test_noisy <- ms_test_noisy %>%
mutate(condition_full = paste(gazeLength, condition, sep="-"))
#change factor levels for plotting
ms_test_noisy$condition_full <- factor(ms_test_noisy$condition_full,
levels = c("Short-Social", "Noisy-Social", "Short-No-social"))
acc.test.noisy <- ggplot(ms_test_noisy, aes(x=condition_full, y=accuracy,
group=trialType, colour=trialType)) +
geom_point(size=2) +
geom_line() +
geom_pointrange(aes(ymin=accuracy - ci_low,
ymax=accuracy + ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
ggtitle("Noisy Channel Test accuracy")
acc.test.noisy
ms_test_noisy <- d.noisy %>%
group_by(gazeLength, condition, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
ms_test_noisy <- d.noisy %>%
group_by(gazeLength, condition, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
#create new condition column for plotting
ms_test_noisy <- ms_test_noisy %>%
mutate(condition_full = paste(gazeLength, condition, sep="-"))
#change factor levels for plotting
ms_test_noisy$condition_full <- factor(ms_test_noisy$condition_full,
levels = c("Short-Social", "Noisy-Social", "Short-No-social"))
acc.test.noisy <- ggplot(ms_test_noisy, aes(x=condition_full, y=accuracy,
group=trialType, colour=trialType)) +
geom_point(size=2) +
geom_line() +
geom_pointrange(aes(ymin=accuracy - ci_low,
ymax=accuracy + ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
ggtitle("Noisy Channel Test accuracy")
acc.test.noisy
ms_test_noisy <- d.noisy.filt %>%
group_by(gazeLength, condition, trialType) %>%
summarise(accuracy = mean(correct),
ci_low = ci.low(correct),
ci_high = ci.high(correct))
#create new condition column for plotting
ms_test_noisy <- ms_test_noisy %>%
mutate(condition_full = paste(gazeLength, condition, sep="-"))
#change factor levels for plotting
ms_test_noisy$condition_full <- factor(ms_test_noisy$condition_full,
levels = c("Short-Social", "Noisy-Social", "Short-No-social"))
acc.test.noisy <- ggplot(ms_test_noisy, aes(x=condition_full, y=accuracy,
group=trialType, colour=trialType)) +
geom_point(size=2) +
geom_line() +
geom_pointrange(aes(ymin=accuracy - ci_low,
ymax=accuracy + ci_high), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
ggtitle("Noisy Channel Test accuracy")
acc.test.noisy
read_path_fyp <- file.path("/Users", "kmacdonald", "Documents",
"Projects", "SOC_XSIT", "processed_data",
"adult-fyp/")
d_fyp_df <- tbl_df(read.csv(paste(read_path_fyp,
"aggregate_soc_xsit.csv", sep="")))
d_fyp_df$condition <- factor(d_fyp_df$condition,
levels = c("Social", "No-Social"))
acc_test_fyp <- ggplot(data=filter(d_fyp_df, intervalNum==0, numPicN==4),
aes(x=condition, y=correct, colour=trialType, group=trialType)) +
geom_point(size = 2.5) +
geom_line() +
geom_pointrange(aes(ymin=correct - corr.cil,
ymax=correct + corr.cih), width = .1) +
geom_hline(yintercept=0.25, linetype = "dashed") +
scale_y_continuous(limits=c(0,1)) +
xlab("Condition") +
ylab("Proportion Correct") +
labs(colour = "Trial Type") +
scale_colour_manual(values=c("firebrick1", "dodgerblue")) +
theme(text = element_text(size=20))
multiplot(acc_test_fyp, acc_test_btw_filt, acc_test_within_blocks_sub_level, acc_test_within_rep_blocks_sub_level, acc_test_within_sub, acc_test_within_rep_sub, cols=3)
multiplot(acc_test_btw, acc_test_within_blocks_unfilt,
acc_test_within_unfilt, acc_test_within_rep_unfilt, cols=2)
?cast
cmss <- cast(mss, condition+ subids ~  trialType)
library(reshape2)
cmss <- dcast(mss, condition+ subids ~  trialType)
qplot(Same,Switch, data=cmss, position="jitter") +
facet_wrap(~condition)
