labs(colour = "Condition") +
labs(linetype = "Trial Type")
acc_test_plot_all
library(plyr)
library(dplyr)
library(bootstrap)
library(lme4)
library(ggplot2)
source("/Users/kmacdonald/Documents/Projects/SOC_XSIT/XSIT-MIN/analysis/Ranalysis/useful.R")
read_path_fyp <- file.path("/Users", "kmacdonald", "Documents",
"Projects", "SOC_XSIT", "processed_data",
"adult-fyp/")
d_df <- tbl_df(read.csv(paste(read_path_fyp,
"soc_xsit_expt1_master.csv", sep="")))
d_df %>%
group_by(condition, intervalNum, numPicN) %>%
summarise(n_subs = n_distinct(subid))
#revalue face vid to match chosen indices
d_df$faceIdx6 <- revalue(d_df$face, c("eyes_left_90"=0, "eyes_right_90"=1,
"eyes_left"=2, "eyes_down_left"=3,
"eyes_down_right"=4, "eyes_right"=5,
"eyescenter"=-1))
d.expo_df <- d_df %>%
filter(exposureTrial == 1) %>%
mutate(correct_exposure = ifelse(numPic == 6,
chosenIdx == faceIdx6,
chosenIdx == faceIdx)) %>%
select(subid, itemNum, correct_exposure)
d.test_df <- d_df %>%
filter(testTrial == 1)
d.test_df <- join(d.expo_df, d.test_df, type = "full")
library(plyr)
library(dplyr)
library(bootstrap)
library(lme4)
library(ggplot2)
source("/Users/kmacdonald/Documents/Projects/SOC_XSIT/XSIT-MIN/analysis/Ranalysis/useful.R")
read_path_fyp <- file.path("/Users", "kmacdonald", "Documents",
"Projects", "SOC_XSIT", "processed_data",
"adult-fyp/")
d_df <- tbl_df(read.csv(paste(read_path_fyp,
"soc_xsit_expt1_master.csv", sep="", row.names=F)))
read_path_fyp <- file.path("/Users", "kmacdonald", "Documents",
"Projects", "SOC_XSIT", "processed_data",
"adult-fyp/")
d_df <- tbl_df(read.csv(paste(read_path_fyp,
"soc_xsit_expt1_master.csv", sep=""), row.names=F))
read_path_fyp <- file.path("/Users", "kmacdonald", "Documents",
"Projects", "SOC_XSIT", "processed_data",
"adult-fyp/")
d_df <- tbl_df(read.csv(paste(read_path_fyp,
"soc_xsit_expt1_master.csv", sep="")))
names(d_df)
d_df <- d_df %>%
select(-X.1, -X)
d_df <- anonymize.sids(d_df, "subid")
View(d_df)
#revalue face vid to match chosen indices
d_df$faceIdx6 <- revalue(d_df$face, c("eyes_left_90"=0, "eyes_right_90"=1,
"eyes_left"=2, "eyes_down_left"=3,
"eyes_down_right"=4, "eyes_right"=5,
"eyescenter"=-1))
d.expo_df <- d_df %>%
filter(exposureTrial == 1) %>%
mutate(correct_exposure = ifelse(numPic == 6,
chosenIdx == faceIdx6,
chosenIdx == faceIdx)) %>%
select(subid, itemNum, correct_exposure)
#revalue face vid to match chosen indices
d_df$faceIdx6 <- revalue(d_df$face, c("eyes_left_90"=0, "eyes_right_90"=1,
"eyes_left"=2, "eyes_down_left"=3,
"eyes_down_right"=4, "eyes_right"=5,
"eyescenter"=-1))
d.expo_df <- d_df %>%
filter(exposureTrial == 1) %>%
mutate(correct_exposure = ifelse(numPic == 6,
chosenIdx == faceIdx6,
chosenIdx == faceIdx)) %>%
select(subids, itemNum, correct_exposure)
d.test_df <- d_df %>%
filter(testTrial == 1)
d.test_df <- join(d.expo_df, d.test_df, type = "full")
d.test_df <- d.test_df %>%
filter(condition == "Social") %>%
group_by(subid, numPic) %>%
summarise(mean_acc_exp = mean(correct_exposure)) %>%
mutate(include_expo = ifelse(numPic == 2 & mean_acc_exp > 0.5, 1,
ifelse(numPic == 4 & mean_acc_exp > 0.25, 1,
ifelse(numPic == 6 & mean_acc_exp > 0.17, 1,
ifelse(numPic == 8 & mean_acc_exp > 0.125, 1,
0))))) %>%
join(d.test_df, by = "subid", type = "full")
d.test_df <- d.test_df %>%
filter(condition == "Social") %>%
group_by(subids, numPic) %>%
summarise(mean_acc_exp = mean(correct_exposure)) %>%
mutate(include_expo = ifelse(numPic == 2 & mean_acc_exp > 0.5, 1,
ifelse(numPic == 4 & mean_acc_exp > 0.25, 1,
ifelse(numPic == 6 & mean_acc_exp > 0.17, 1,
ifelse(numPic == 8 & mean_acc_exp > 0.125, 1,
0))))) %>%
join(d.test_df, by = "subid", type = "full")
d.test_df <- d.test_df %>%
filter(condition == "Social") %>%
group_by(subids, numPic) %>%
summarise(mean_acc_exp = mean(correct_exposure)) %>%
mutate(include_expo = ifelse(numPic == 2 & mean_acc_exp > 0.5, 1,
ifelse(numPic == 4 & mean_acc_exp > 0.25, 1,
ifelse(numPic == 6 & mean_acc_exp > 0.17, 1,
ifelse(numPic == 8 & mean_acc_exp > 0.125, 1,
0))))) %>%
join(d.test_df, by = "subids", type = "full")
d.test_df <- d.test_df %>%
mutate(include_good_rt = ifelse(log(rt) > mean(log(rt)) + 2 * sd(log(rt)) |
log(rt) < mean(log(rt)) - 2 * sd(log(rt)),
0, 1))
write.csv(keep.data, paste(read_path_fyp, "soc_xsit_expt1_master_clean.csv", sep=""),
row.names=FALSE)
write.csv(d_df, paste(read_path_fyp, "soc_xsit_expt1_master_clean.csv", sep=""),
row.names=FALSE)
View(d_df)
write.csv(d.test_df, paste(read_path_fyp, "soc_xsit_expt1_all_test.csv", sep=""),
row.names=FALSE)
names(d.test_df)
iChart <- readiChart("/Users/kylemacdonaldadmin/Documents/Projects/SOL/SOL_Data /SOL_Child_Data_n23/SOL.n23.ichart.txt")
source("/Users/kylemacdonaldadmin/RScripts_v_3.6/libraries_v_3.6.R")
source("/Users/kmacdonald/Documents/programming/rscripts/RScripts_v_3.6")
getwd()
source("/Users/kmacdonald/Documents/programming/rscripts/RScripts_v_3.6/libraries_v_3.6.R")
iChart <- readiChart("/Users/kylemacdonaldadmin/Documents/Projects/SOL/SOL_Data /SOL_Child_Data_n23/SOL.n23.ichart.txt")
iChart <- readiChart("/Users/kmacdonald/Documents/Projects/SOL/SOL_Data/SOL_All_Data_n33/SOL.ALL.iChart.n33.txt")
iChart <- readiChart("/Users/kmacdonald/Documents/Projects/SOL/SOL_Data/SOL_All_Data_n33/SOL.ALL.iChart.n33.txt")
View(iChart)
iChart <- readiChart("/Users/kmacdonald/Documents/Projects/SOL/SOL_Data/SOL_All_Data_n33/SOL.ALL.iChart.n33.txt",
row.names=F)
iChart$Response[iChart$Response == "A"] <- "D"
iChart$Response[iChart$Response == "C"] <- "D"
iChart <- readiChart("/Users/kmacdonald/Documents/Projects/SOL/SOL_Data/SOL_Child_Data_n23/SOL.n23.alldata.csv")
rm(iChart)
iChart <- readiChart("/Users/kmacdonald/Documents/Projects/SOL/SOL_Data/SOL_Child_Data_n23/SOL.n23.alldata.csv")
source("/Users/kmacdonald/Documents/programming/rscripts/RScripts_v_3.6/libraries_v_3.6.R")
iChart <- readiChart("/Users/kmacdonald/Documents/Projects/SOL/SOL_Data/SOL_Child_Data_n23/SOL.n23.alldata.csv")
library(ggplot2)
source("http://www.stanford.edu/~ricardoh/fortify.R")
d2 <- read.csv("/Users/kmacdonald/Documents/Projects/SOL/SOL_Data /SOL.n33.alldata.csv")
d2 <- read.csv("/Users/kmacdonald/Documents/Projects/SOL/SOL_Data/SOL.n33.alldata.csv")
View(`d2`)
cor.test(d2$vanilla, d2$Months)
qplot(data=d2, x=Months, y=vanilla, main="Positive Relationship Between Accuracy and Age") +
theme_bw(base_size=14) +
geom_point(color="gray40", size=5) +
theme(title=element_text(vjust=1.5)) +
ylab("Accuracy") +
xlab("Age (months)") +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.1)) +
stat_smooth(method="lm", se=FALSE) +
annotate("text", x=0.54, y=40, label="r(21) = .60", size = 8, face="bold")
names(d2)
ggplot(data=d2, aes(x=Months, y=vanilla)) +
geom_point()
ggplot(data=d2, aes(x=Months, y=vanilla)) +
geom_point(size=5)
ggplot(data=d2, aes(x=Months, y=vanilla)) +
geom_point(size=4)
ggplot(data=d2, aes(x=Months, y=vanilla)) +
geom_point(size=4) +
xlab("Age (months)") +
ylab("Mean Accuracy")
?scale_continuous
?scale_Y_continuous
?scale_y_continuous
ggplot(data=d2, aes(x=Months, y=vanilla)) +
geom_point(size=4) +
xlab("Age (months)") +
ylab("Mean Accuracy") +
ylim(0.45, 0.85)
ggplot(data=d2, aes(x=Months, y=vanilla)) +
geom_point(size=4) +
xlab("Age (months)") +
ylab("Mean Accuracy") +
ylim(0.45, 0.80)
?stat_smooth
ggplot(data=d2, aes(x=Months, y=vanilla)) +
geom_point(size=4) +
xlab("Age (months)") +
ylab("Mean Accuracy") +
ylim(0.45, 0.80) +
stat_smooth(method="lm", se=FALSE)
?annotate
ggplot(data=d2, aes(x=Months, y=vanilla)) +
geom_point(size=4) +
xlab("Age (months)") +
ylab("Mean Accuracy") +
ylim(0.45, 0.80) +
stat_smooth(method="lm", se=FALSE) +
annotate("text", x=0.54, y=40, label="r(21) = .60", size = 8, face="bold")
?ggtitle()
ggplot(data=d2, aes(x=Months, y=vanilla)) +
geom_point(size=4) +
xlab("Age (months)") +
ylab("Mean Accuracy") +
ylim(0.45, 0.80) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Age and Accuracy")
ggplot(data=d2, aes(x=Months, y=vanilla)) +
geom_point(size=4) +
xlab("Age (months)") +
ylab("Mean Accuracy") +
ylim(0.45, 0.80) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.1)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Age and Accuracy")
ggplot(data=d2, aes(x=Months, y=vanilla)) +
geom_point(size=4) +
xlab("Age (months)") +
ylab("Mean Accuracy") +
ylim(0.45, 0.80) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.1)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Age and Accuracy")
annotate("text", x=0.54, y=40, label="r(21) = .60", size = 8, face="bold")
ggplot(data=d2, aes(x=Months, y=vanilla)) +
geom_point(size=4) +
xlab("Age (months)") +
ylab("Mean Accuracy") +
ylim(0.45, 0.80) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.1)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Age and Accuracy") +
annotate("text", x=0.54, y=40, label="r(21) = .60", size = 8, face="bold")
?geom_text
ggplot(data=d2, aes(x=Months, y=vanilla)) +
geom_point(size=4) +
xlab("Age (months)") +
ylab("Mean Accuracy") +
ylim(0.45, 0.80) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.1)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Age and Accuracy") +
geom_text(x=0.54, y=40, label="r(21) = .60", size = 8, face="bold")
ggplot(data=d2, aes(x=Months, y=vanilla)) +
geom_point(size=4) +
xlab("Age (months)") +
ylab("Mean Accuracy") +
ylim(0.45, 0.80) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.1)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Age and Accuracy") +
geom_text(x=40, y=0.54, label="r(21) = .60", size = 8, face="bold")
d2_18_30 <- d2[which(d2$Months <= 30 & d2$Months >= 18),]
d2_all_good_subs <- subset(d2, d2$X <= 23m)
d2_under30 <- d2[which(d2$Months <= 30 & d2$Sub.Num != 30030),]
cor.test(d2_under30$vanilla, d2_under30$signs_produced)
ggplot(data=d2_under30, aes(x=vanilla, y=signs_produced)) +
geom_point(size=4) +
xlab("Signs Produced") +
ylab("Mean Accuracy") +
ylim(0.45, 0.80) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.1)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Vocabulary and Accuracy") +
geom_text(x=0.54, y=60, label="r(10) = .72", size = 8, face="bold")
names(d2_under30)
ggplot(data=d2_under30, aes(x=vanilla, y=signs_produced)) +
geom_point(size=4)
ggplot(data=d2_under30, aes(x=vanilla, y=signs_produced)) +
geom_point(size=4) +
xlab("Signs Produced") +
ylab("Mean Accuracy") +
ylim(0, 90) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.1)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Vocabulary and Accuracy") +
geom_text(x=0.54, y=60, label="r(10) = .72", size = 8, face="bold")
ggplot(data=d2_under30, aes(x=vanilla, y=signs_produced)) +
geom_point(size=4) +
xlab("Signs Produced") +
ylab("Mean Accuracy") +
ylim(0, 90) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.1)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Vocabulary and Accuracy") +
geom_text(x=0.54, y=75, label="r(10) = .72", size = 8, face="bold")
ggplot(data=d2_under30, aes(x=vanilla, y=signs_produced)) +
geom_point(size=4) +
xlab("Signs Produced") +
ylab("Mean Accuracy") +
ylim(0, 90) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.3)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Vocabulary and Accuracy") +
geom_text(x=0.54, y=75, label="r(10) = .72", size = 8, face="bold")
ggplot(data=d2_under30, aes(x=signs_produced, y=vanilla)) +
geom_point(size=4) +
xlab("Signs Produced") +
ylab("Mean Accuracy") +
ylim(0, 90) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.3)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Vocabulary and Accuracy") +
geom_text(x=0.54, y=75, label="r(10) = .72", size = 8, face="bold")
ggplot(data=d2_under30, aes(x=signs_produced, y=vanilla)) +
geom_point(size=4) +
xlab("Signs Produced") +
ylab("Mean Accuracy") +
ylim(0.45, 0.8) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.3)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Vocabulary and Accuracy") +
geom_text(x=0.54, y=75, label="r(10) = .72", size = 8, face="bold")
ggplot(data=d2_under30, aes(x=signs_produced, y=vanilla)) +
geom_point(size=4) +
xlab("Signs Produced") +
ylab("Mean Accuracy") +
ylim(0.45, 0.8) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.3)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Vocabulary and Accuracy") +
geom_text(x=0.54, y=15, label="r(10) = .72", size = 8, face="bold")
ggplot(data=d2_under30, aes(x=signs_produced, y=vanilla)) +
geom_point(size=4) +
xlab("Signs Produced") +
ylab("Mean Accuracy") +
ylim(0.45, 0.8)
ggplot(data=d2_under30, aes(x=signs_produced, y=vanilla)) +
geom_point(size=4) +
xlab("Signs Produced") +
ylab("Mean Accuracy") +
ylim(0.45, 0.8) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.3)) +
stat_smooth(method="lm", se=FALSE)
ggplot(data=d2_under30, aes(x=signs_produced, y=vanilla)) +
geom_point(size=4) +
xlab("Signs Produced") +
ylab("Mean Accuracy") +
ylim(0.45, 0.8) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.3)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Vocabulary and Accuracy") +
geom_text(x=15, y=0.7, label="r(10) = .72", size = 8, face="bold")
cdi_acc_plot <- ggplot(data=d2_under30, aes(x=signs_produced, y=vanilla)) +
geom_point(size=4) +
xlab("Signs Produced") +
ylab("Mean Accuracy") +
ylim(0.45, 0.8) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.3)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Vocabulary and Accuracy") +
geom_text(x=15, y=0.7, label="r(10) = .72", size = 8, face="bold")
age_acc_plot <- ggplot(data=d2, aes(x=Months, y=vanilla)) +
geom_point(size=4) +
xlab("Age (months)") +
ylab("Mean Accuracy") +
ylim(0.45, 0.80) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.1)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Age and Accuracy") +
geom_text(x=40, y=0.54, label="r(21) = .60", size = 8, face="bold")
?multiplot()
source('~/.active-rstudio-document', echo=TRUE)
?multiplot
?multiplot()
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot
?multiplot()
multiplot(age_acc_plot, cdi_acc_plot)
multiplot(age_acc_plot, cdi_acc_plot, cols = 2)
cdi_acc_plot <- ggplot(data=d2_under30, aes(x=signs_produced, y=vanilla)) +
geom_point(size=4) +
xlab("Signs Produced") +
ylab("Mean Accuracy") +
ylim(0.45, 0.8) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.3)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Vocabulary and Accuracy") +
geom_text(x=50, y=0.54, label="r(10) = .72", size = 8, face="bold")
multiplot(age_acc_plot, cdi_acc_plot, cols = 2)
cdi_acc_plot <- ggplot(data=d2_under30, aes(x=signs_produced, y=vanilla)) +
geom_point(size=4) +
xlab("Signs Produced") +
ylab("Mean Accuracy") +
ylim(0.45, 0.8) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.3)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Vocabulary and Accuracy") +
geom_text(x=65, y=0.54, label="r(10) = .72", size = 8, face="bold")
cdi_acc_plot <- ggplot(data=d2_under30, aes(x=signs_produced, y=vanilla)) +
geom_point(size=4) +
xlab("Signs Produced") +
ylab("Mean Accuracy") +
ylim(0.45, 0.8) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.3)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Vocabulary and Accuracy") +
geom_text(x=65, y=0.54, label="r(10) = .72", size = 8, face="bold")
multiplot(age_acc_plot, cdi_acc_plot, cols = 2)
age_acc_plot <- ggplot(data=d2, aes(x=Months, y=vanilla)) +
geom_point(size=4) +
xlab("Age (months)") +
ylab("Mean Accuracy") +
ylim(0.45, 0.75) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.1)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Age and Accuracy") +
geom_text(x=40, y=0.54, label="r(21) = .60", size = 8, face="bold")
cdi_acc_plot <- ggplot(data=d2_under30, aes(x=signs_produced, y=vanilla)) +
geom_point(size=4) +
xlab("Signs Produced") +
ylab("Mean Accuracy") +
ylim(0.45, 0.75) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(axis.title.y=element_text(vjust=0.3)) +
stat_smooth(method="lm", se=FALSE) +
ggtitle("Positive Relationship Between Vocabulary and Accuracy") +
geom_text(x=65, y=0.54, label="r(10) = .72", size = 8, face="bold")
multiplot(age_acc_plot, cdi_acc_plot, cols = 2)
rm(list=ls())
library(bootstrap)
library(lme4)
library(ggplot2)
library(arm)
library(directlabels)
library(stringr)
library(plyr)
library(reshape2)
options(device="quartz")
compute.probs2(gamma=0, lambda=1, sigma=.5, numPic=4, int=0)
source("/Users/kmacdonald/Documents/Projects/SOC_XSIT/r_scripts/soc_xsit_model.R")
source("/Users/kmacdonald/Documents/Projects/SOC_XSIT/soc_xsit_r_scripts/soc_xsit_model.R")
compute.probs2(gamma=0, lambda=1, sigma=.5, numPic=4, int=0)
compute.probs2(gamma=1, lambda=0, sigma=.5, numPic=4, int=0)
compute.probs2(gamma=1, lambda=1, sigma=.5, numPic=4, int=0)
compute.probs2(gamma=1, lambda=0, sigma=.5, numPic=4, int=10)
compute.probs2(gamma=1, lambda=1, sigma=.5, numPic=4, int=10)
gamma <- 1.609619               # strength of initial encoding
lambda <- 0.1597503             # rate of memory decay
sigma <- c(0.25, 0.50, 0.75, 1) # amount of intention given to initial hypothesis
int <- c(0, 1, 3, 7)            # number of intervening words
numPic <- 4
probs <- data.frame()
for (i in 1:length(int)){
for (j in 1:length(sigma)) {
probs <- rbind(probs,data.frame(p = compute.probs(gamma, lambda, sigma[j], numPic, int[i]),
cond = c("same","switch"),
int = int[i],
sigma = sigma[j]))
}
}
quartz(width=6,height=4,title = "Simulation 1: Sigma + Interval")
ggplot(data=probs, aes(x=int, y=p)) +
geom_line(aes(colour=cond)) +
geom_point(aes(colour=cond)) +
facet_wrap(~sigma, ncol=4) +
theme_bw()
