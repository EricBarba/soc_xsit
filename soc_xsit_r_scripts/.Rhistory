)
data.test_df <- read.csv(paste(path, "soc-xsit-ipad-testdata.csv", sep=""))
data.all_df <- read.csv(paste(path, "soc-xsit-ipad-alldata.csv", sep=""))
View(data.test_df)
?read.csv
View(data.all_df)
View(data.all_df)
data.all_df <- tbl_df(read.csv(paste(path, "soc-xsit-ipad-alldata.csv", sep="")))
data.test_df <- tbl_df(read.csv(paste(path, "soc-xsit-ipad-testdata.csv", sep="")))
View(data.all_df)
data.all_df <- tbl_df(read.csv(paste(path, "soc-xsit-ipad-alldata.csv", sep=""), row.names=F))
data.all_df <- tbl_df(read.csv(paste(path, "soc-xsit-ipad-alldata.csv", sep=""), row.names))
library(directlabels)
source('~/.active-rstudio-document', echo=TRUE)
?write.csv
write.csv(d.final.all, file= paste(write_path, "soc-xsit-ipad-alldata.csv", sep=""), row.names=F)
write.csv(d.final.test, file = paste(write_path, "soc-xsit-ipad-testdata.csv", sep=""), row.names=F)
source("/Users/kmacdonald/Documents/programming/rscripts/useful.R")
library(plyr)
library(dplyr)
library(bootstrap)
library(lme4)
library(ggplot2)
path <- "/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/child/"
data.all_df <- tbl_df(read.csv(paste(path, "soc-xsit-ipad-alldata.csv", sep="")))
data.test_df <- tbl_df(read.csv(paste(path, "soc-xsit-ipad-testdata.csv", sep="")))
View(data.all_df)
data.test_df %>%
summarise(n_subjects = n_distinct(subid))
data.test_df %>%
group_by(condition) %>%
summarise(n_subjects = n_distinct(subid))
data.test_df %>%
group_by(age_group, condition) %>%
summarise(n_subject = n_distinct(subid))
# get trial breakdown for each subject
trial_breakdown <- data.test_df %>%
group_by(subid, trial_type_redo) %>%
summarise(n_trial = n())
trial_breakdown
include_df <- trial_breakdown %>% mutate(include_test_trials = ifelse(n_trial == 3,1,0))
include_df <- include_df %>% select(subid, include_test_trials)
data.test_df <- join(data.test_df, include_df, by="subid")
View(data.test_df)
d.test.filt.subs <- filter(data.test_df, include == 1, include_test_trials == 1)
d.test.filt <- filter(data.test_df, include == 1, include_test_trials == 1,
condition == "No-social" | correct_exposure == TRUE)
n.pre.filt <- data.test_df %>% summarise(n_pre_filt = n_distinct(subid))
n.post.filt <- d.test.filt %>% summarise(n_post_filt = n_distinct(subid))
cbind(n.pre.filt, n.post.filt)
d.test.filt %>%
group_by(condition) %>%
summarise(n_subject = n_distinct(subid))
d.test.filt %>%
group_by(age_group, condition) %>%
summarise(n_subject = n_distinct(subid))
acc.expo <- d.test.filt.subs %>%
group_by(condition) %>%
filter(condition == "Social") %>%
summarise(mean_correct = mean(correct_exposure),
ci_high = ci.high(correct_exposure),
ci_low = ci.low(correct_exposure), n_trial = n())
View(acc.expo)
View(d.test.filt)
acc.expo.filt <- d.test.filt %>%
group_by(condition) %>%
filter(condition == "Social") %>%
summarise(mean_correct = mean(correct_exposure),
ci_high = ci.high(correct_exposure),
ci_low = ci.low(correct_exposure), n_trial = n())
View(acc.expo.filt)
View(acc.expo)
cbind(acc.expo, acc.expo.filt)
cbind(acc.expo, acc.expo.filt)
temp <- cbind(acc.expo, acc.expo.filt)
View(temp)
rbind(acc.expo, acc.expo.filt)
rbind(acc.expo, acc.expo.filt)
means <- d.test.filt %>%
group_by(condition, trial_type_redo) %>%
summarise(mean(correct))
View(means)
ms <- d.test.filt %>%
group_by(condition, trial_type_redo) %>%
summarise(mean_correct = mean(correct),
ci_high = ci.high(correct),
ci_low = ci.low(correct),
n_trial = n())
View(ms)
View(d.test.filt)
#get number of subjects filtered out
n.pre.filt <- data.test_df %>% summarise(n_pre_filt = n_distinct(subid))
n.post.filt <- d.test.filt %>% summarise(n_post_filt = n_distinct(subid))
cbind(n.pre.filt, n.post.filt)
acc.expo <- d.test.filt.subs %>%
group_by(condition) %>%
filter(condition == "Social") %>%
summarise(mean_correct = mean(correct_exposure),
ci_high = ci.high(correct_exposure),
ci_low = ci.low(correct_exposure), n_trial = n())
acc.expo.filt <- d.test.filt %>%
group_by(condition) %>%
filter(condition == "Social") %>%
summarise(mean_correct = mean(correct_exposure),
ci_high = ci.high(correct_exposure),
ci_low = ci.low(correct_exposure), n_trial = n())
rbind(acc.expo, acc.expo.filt)
ms <- d.test.filt %>%
group_by(condition, trial_type_redo) %>%
summarise(mean_correct = mean(correct),
ci_high = ci.high(correct),
ci_low = ci.low(correct),
n_trial = n())
d.test.filt <- filter(data.test_df, include == 1, include_test_trials == 1,
condition == "No-social" | correct_exposure == TRUE,
age_group == 4 | age_group == 5)
d.test.filt <- filter(data.test_df, include == 1, include_test_trials == 1,
condition == "No-social" | correct_exposure == TRUE)
d.test.filt.old <- filter(data.test_df, include == 1, include_test_trials == 1,
condition == "No-social" | correct_exposure == TRUE,
age_group == 4 | age_group == 5)
ms_old <- d.test.filt.old %>%
group_by(condition, trial_type_redo) %>%
summarise(mean_correct = mean(correct),
ci_high = ci.high(correct),
ci_low = ci.low(correct),
n_trial = n())
View(ms_old)
ggplot(data = ms,
aes(x = condition, y = mean_correct, group = trial_type_redo,
colour = trial_type_redo)) +
geom_errorbar(aes(ymin = mean_correct - ci_low,
ymax = mean_correct + ci_high), width = 0.05) +
geom_point() +
geom_line() +
geom_hline(yintercept = 0.5, linetype = "dashed") +
scale_y_continuous(limits=c(0,1))
ggplot(data = ms,
aes(x = condition, y = mean_correct, group = trial_type_redo,
colour = trial_type_redo)) +
geom_errorbar(aes(ymin = mean_correct - ci_low,
ymax = mean_correct + ci_high), width = 0.05) +
geom_point() +
geom_line() +
geom_hline(yintercept = 0.5, linetype = "dashed") +
scale_y_continuous(limits=c(0,1))
View(means)
View(ms)
d.test.filt %>%
group_by(condition) %>%
summarise(n_subject = n_distinct(subid))
names(d.test.filt)
ggplot(data = ms_old,
aes(x = condition, y = mean_correct, group = trial_type_redo,
colour = trial_type_redo)) +
geom_errorbar(aes(ymin = mean_correct - ci_low,
ymax = mean_correct + ci_high), width = 0.05) +
geom_point() +
geom_line() +
geom_hline(yintercept = 0.5, linetype = "dashed") +
scale_y_continuous(limits=c(0,1))
library(plyr)
library(dplyr)
library(directlabels)
library(stringr)
path_v1 <- "/Users/kmacdonald/Documents/Projects/SOC_XSIT/raw_data/child/processing-2/"
path_v2 <- "/Users/kmacdonald/Documents/Projects/SOC_XSIT/raw_data/child/processing-2/subids-expt/"
path_debug <- "/Users/kmacdonald/Documents/Projects/SOC_XSIT/raw_data/child/debug/"
write_path <- "/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/child/"
demo <- read.csv(paste(path_v1, "soc-xsit-demo-data.csv", sep=""))
# Create empty arrays for binding
all.data <- as.data.frame(matrix(ncol = 0, nrow = 0))
#grab all file names from data dir.
#These are all of the kids for whom we have ipad data
all_results <- list.files(path = path_v1, pattern = 'results_*', all.files = FALSE)
#function to munge the data
#takes in a list of filenames (.txt of each kid's data),
#strips html escape characters, and grabs the relevant info for each trial
#returns data frame with all the data
bing_clean <- function(filename) {
x <- readLines(paste(path_v1, filename,sep=""),warn=FALSE)
x <- unlist(strsplit(x,'<li>'))
#grab condition
condition <- x[3]
if (grepl(pattern="Social", condition)) {
condition <- str_extract(pattern="Social", condition)
} else {
condition <- str_extract(pattern="No-social", condition)
}
# grab trial information
x <- x[11:150]
#strip html characters
x <- gsub('\\"',"", x)
x <- gsub("\\\\\"","",x)
x <- gsub("</li>","",x)
x <- gsub("</ul>\\},\\{<ul>","",x)
x[length(x)] <- gsub("</ul>\\}]","",x[length(x)])
x <- gsub("^.*?: ","",x)
#grab date
date <- str_sub(filename,20,36)
date <- gsub('_','',date)
date <- gsub('\\.','',date)
#grab id
id <- str_sub(filename,0,2)
id <- gsub('-','',id)
#bind to data frame
x <- as.data.frame(matrix(x,14,10,byrow=TRUE), stringsAsFactors=F)
x$V11 <- date
x$V12 <- id
x$V13 <- condition
return(x) ## need this to get the data frame!
}
#apply munging function to each kid's data file
all.data <- ldply(.data = all_results, .fun = bing_clean)
#add variable names to columns
names(all.data) <- c("itemNum","trialType","samePos","chosen","chosen_idx",
"kept","kept_idx","rt","faceVid","faceIdx", "date", "subid", "condition")
View(all.data)
all.data <- all.data %>%
group_by(date) %>%
mutate(trial = c(1:14),
trial_cat = ifelse(trial %in% c(1:2),"example",
ifelse(trial %in% c(3,5,7,9,11,13),"exposure",
ifelse(trial %in% c(4,6,8,10,12,14),"test",NA)))) %>%
arrange(date, trial)
#find whether child's choice was correct
#for exposure trials, we check the index of eye gaze against child's choice
#for test trials, we check the kept image against the child's choice
all.data <- all.data %>%
group_by(subid) %>%
mutate(correct = ifelse(trial_cat == "example",
chosen[1] == "flower" | chosen[2] == "truck",
ifelse(trial_cat == "exposure", chosen_idx == faceIdx,
ifelse(trial_cat == "test" , chosen == kept, NA))))
#relabel variables and variable types for analysis
all.data$rt <- as.integer(all.data$rt)
all.data$condition <- as.factor(all.data$condition)
all.data <- join(all.data, demo, by = "subid")
all.data <- all.data[c("subid","birthday","gender","age","age_group","date", "condition",
"trial","itemNum","trialType","samePos","chosen","chosen_idx","kept",
"kept_idx","rt","faceVid","faceIdx", "trial_cat",
"correct", "include", "version_expt", "condition_expt")]
exposure.trials <- all.data %>%
filter(trial_cat == "exposure") %>%
mutate(trial_type_redo = ifelse(chosen == kept,1,2)) %>%
select(subid, itemNum, trial_type_redo, chosen_exposure = chosen,
kept_exposure = kept, correct_exposure = correct)
View(exposure.trials)
View(all.data)
all.data$rt <- as.integer(all.data$rt)
all.data$condition <- as.factor(all.data$condition)
all.data <- join(all.data, demo, by = "subid")
View(all.data)
all.data <- all.data[c("subid","birthday","gender","age","age_group","date", "condition",
"trial","itemNum","trialType","samePos","chosen","chosen_idx","kept",
"kept_idx","rt","faceVid","faceIdx", "trial_cat",
"correct", "include", "version_expt", "condition_expt")]
exposure.trials <- all.data %>%
filter(trial_cat == "exposure") %>%
mutate(trial_type_redo = ifelse(chosen == kept,1,2)) %>%
select(subid, itemNum, trial_type_redo, chosen_exposure = chosen,
kept_exposure = kept, correct_exposure = correct)
test.trials <- all.data %>% filter(trial_cat == "test")
View(test.trials)
View(exposure.trials)
test.trials <- join(test.trials,exposure.trials, by=c("subid","itemNum"))
test.trials$trial_type_redo <- factor(test.trials$trial_type_redo,
labels = c('Same','Switch'))
View(test.trials)
source("/Users/kmacdonald/Documents/programming/rscripts/useful.R")
library(plyr)
library(dplyr)
library(bootstrap)
library(lme4)
library(ggplot2)
path <- "/Users/kmacdonald/Documents/Projects/SOC_XSIT/processed_data/child/"
data.all_df <- tbl_df(read.csv(paste(path, "soc-xsit-ipad-alldata.csv", sep="")))
data.test_df <- tbl_df(read.csv(paste(path, "soc-xsit-ipad-testdata.csv", sep="")))
data.test_df %>% summarise(n_subjects = n_distinct(subid))
data.test_df %>%
group_by(condition) %>%
summarise(n_subjects = n_distinct(subid))
data.test_df %>%
group_by(age_group, condition) %>%
summarise(n_subject = n_distinct(subid))
include_df <- trial_breakdown %>% mutate(include_test_trials = ifelse(n_trial == 3,1,0))
# flag kids who got equal number of same and switch
include_df <- include_df %>% select(subid, include_test_trials)
# merge this information with the rest of the test trials
data.test_df <- join(data.test_df, include_df, by="subid")
# filter out by experimenter notes and those subs who didn't get 3 same/switch trials
d.test.filt.subs <- filter(data.test_df, include == 1, include_test_trials == 1)
# now we filter out test trials that participant didn't get exposure trial correct
d.test.filt <- filter(data.test_df, include == 1, include_test_trials == 1,
condition == "No-social" | correct_exposure == TRUE)
# only older kids
d.test.filt.old <- filter(data.test_df, include == 1, include_test_trials == 1,
condition == "No-social" | correct_exposure == TRUE,
age_group == 4 | age_group == 5)
include_df <- trial_breakdown %>% mutate(include_test_trials = ifelse(n_trial == 3,1,0))
# flag kids who got equal number of same and switch
include_df <- include_df %>% select(subid, include_test_trials)
# merge this information with the rest of the test trials
data.test_df <- join(data.test_df, include_df, by="subid")
# filter out by experimenter notes and those subs who didn't get 3 same/switch trials
d.test.filt.subs <- filter(data.test_df, include == 1, include_test_trials == 1)
# now we filter out test trials that participant didn't get exposure trial correct
d.test.filt <- filter(data.test_df, include == 1, include_test_trials == 1,
condition == "No-social" | correct_exposure == TRUE)
# only older kids
d.test.filt.old <- filter(data.test_df, include == 1, include_test_trials == 1,
condition == "No-social" | correct_exposure == TRUE,
age_group == 4 | age_group == 5)
data.all_df <- tbl_df(read.csv(paste(path, "soc-xsit-ipad-alldata.csv", sep="")))
data.test_df <- tbl_df(read.csv(paste(path, "soc-xsit-ipad-testdata.csv", sep="")))
data.test_df %>% summarise(n_subjects = n_distinct(subid))
data.test_df %>%
group_by(condition) %>%
summarise(n_subjects = n_distinct(subid))
# get trial breakdown for each subject
trial_breakdown <- data.test_df %>%
group_by(subid, trial_type_redo) %>%
summarise(n_trial = n())
include_df <- trial_breakdown %>% mutate(include_test_trials = ifelse(n_trial == 3,1,0))
# flag kids who got equal number of same and switch
include_df <- include_df %>% select(subid, include_test_trials)
# merge this information with the rest of the test trials
data.test_df <- join(data.test_df, include_df, by="subid")
# filter out by experimenter notes and those subs who didn't get 3 same/switch trials
d.test.filt.subs <- filter(data.test_df, include == 1, include_test_trials == 1)
# now we filter out test trials that participant didn't get exposure trial correct
d.test.filt <- filter(data.test_df, include == 1, include_test_trials == 1,
condition == "No-social" | correct_exposure == TRUE)
# only older kids
d.test.filt.old <- filter(data.test_df, include == 1, include_test_trials == 1,
condition == "No-social" | correct_exposure == TRUE,
age_group == 4 | age_group == 5)
n.pre.filt <- data.test_df %>% summarise(n_pre_filt = n_distinct(subid))
n.post.filt <- d.test.filt %>% summarise(n_post_filt = n_distinct(subid))
cbind(n.pre.filt, n.post.filt)
# by condition
d.test.filt %>%
group_by(condition) %>%
summarise(n_subject = n_distinct(subid))
# by age and condition
d.test.filt %>%
group_by(age_group, condition) %>%
summarise(n_subject = n_distinct(subid))
acc.expo <- d.test.filt.subs %>%
group_by(condition) %>%
filter(condition == "Social") %>%
summarise(mean_correct = mean(correct_exposure),
ci_high = ci.high(correct_exposure),
ci_low = ci.low(correct_exposure), n_trial = n())
acc.expo.filt <- d.test.filt %>%
group_by(condition) %>%
filter(condition == "Social") %>%
summarise(mean_correct = mean(correct_exposure),
ci_high = ci.high(correct_exposure),
ci_low = ci.low(correct_exposure), n_trial = n())
rbind(acc.expo, acc.expo.filt)
ms <- d.test.filt %>%
group_by(condition, trial_type_redo) %>%
summarise(mean_correct = mean(correct),
ci_high = ci.high(correct),
ci_low = ci.low(correct),
n_trial = n())
ms_old <- d.test.filt.old %>%
group_by(condition, trial_type_redo) %>%
summarise(mean_correct = mean(correct),
ci_high = ci.high(correct),
ci_low = ci.low(correct),
n_trial = n())
ggplot(data = ms,
aes(x = condition, y = mean_correct, group = trial_type_redo,
colour = trial_type_redo)) +
geom_errorbar(aes(ymin = mean_correct - ci_low,
ymax = mean_correct + ci_high), width = 0.05) +
geom_point() +
geom_line() +
geom_hline(yintercept = 0.5, linetype = "dashed") +
scale_y_continuous(limits=c(0,1))
ggplot(d.test.filt, aes(x = condition, y = correct, fill=trial_type_redo)) +
geom_dotplot(binaxis = "y", stackdir = "centerwhole")
ms_subs <- d.test.filt %>%
group_by(subid, condition, trial_type_redo) %>%
summarise(mean_correct = mean(correct),
ci_high = ci.high(correct),
ci_low = ci.low(correct),
n_trial = n())
View(ms_subs)
ggplot(ms_subs, aes(x = condition, y = correct, fill=trial_type_redo)) +
geom_dotplot(binaxis = "y", stackdir = "centerwhole")
ggplot(ms_subs, aes(x = condition, y = mean_correct, fill=trial_type_redo)) +
geom_dotplot(binaxis = "y", stackdir = "centerwhole")
View(ms_subs)
?geom_dotplot
View(ms_subs)
ggplot(ms_subs, aes(x = condition, y = mean_correct, fill=trial_type_redo)) +
geom_dotplot(binaxis = "y", stackdir = "centerwhole", position = "dodge")
names(d.test.filt)
ms_trial <- d.test.filt %>%
group_by(itemNum, condition, trial_type_redo) %>%
summarise(mean_correct = mean(correct),
ci_high = ci.high(correct),
ci_low = ci.low(correct),
n_trial = n())
View(ms_trial)
qplot(ms_trial, x = itemNum, y = mean_correct, color=trial_type_redo)
names(ms_trial)
qplot(ms_trial, x = itemNum, y = mean_correct, color=trial_type_redo,
geom=c("line"))
qplot(data=ms_trial, x = itemNum, y = mean_correct, color=trial_type_redo,
geom=c("line"))
?qplot
limits <- aes(ymax = mean_corret + ci_high, ymin= mean_correct - ci_low)
qplot(data = ms_trial, x = itemNum, y = mean_correct,
geom=c("point", "line"), color=trial_type_redo,
ylim=c(0,1), xlab=c("Trial Number"),
ylab=c("Proportion Correct")) +
geom_hline(yintercept = 0.5, linetype="dashed") +
geom_errorbar(limits, width=0.1) +
facet_grid(.~condition)
limits <- aes(ymax = mean_correct + ci_high, ymin= mean_correct - ci_low)
qplot(data = ms_trial, x = itemNum, y = mean_correct,
geom=c("point", "line"), color=trial_type_redo,
ylim=c(0,1), xlab=c("Trial Number"),
ylab=c("Proportion Correct")) +
geom_hline(yintercept = 0.5, linetype="dashed") +
geom_errorbar(limits, width=0.1) +
facet_grid(.~condition)
?dotplot
?geom_dotplot
ggplot(ms_subs, aes(x = condition, y = mean_correct, fill=trial_type_redo)) +
geom_dotplot(binaxis = "y", stackdir = "centerwhole", position = "dodge", dotsize=0.5)
ggplot(ms_subs, aes(x = condition, y = mean_correct, fill=trial_type_redo)) +
geom_dotplot(binaxis = "y", stackdir = "centerwhole", position = "dodge", dotsize=0.7)
ggplot(ms_subs, aes(x = condition, y = mean_correct, fill=trial_type_redo)) +
geom_dotplot(binaxis = "y", stackdir = "centerwhole", position = "dodge", dotsize=0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed")
ggplot(ms_subs, aes(x = condition, y = mean_correct, fill=trial_type_redo)) +
geom_dotplot(binaxis = "y", stackdir = "centerwhole", position = "dodge", dotsize=0.6) +
geom_hline(yintercept = 0.5, linetype = "dashed")
source("/Users/kmacdonald/Documents/Projects/SOC_XSIT/XSIT-MIN/analysis/Ranalysis/useful.R")
library(rjson)
library(plyr)
library(dplyr)
read_path <- file.path("/Users", "kmacdonald", "Documents", "Projects", "SOC_XSIT", "soc_xsit_expts", "soc_xsit_live/")
write_path <- file.path("/Users", "kmacdonald", "Documents", "Projects", "SOC_XSIT", "processed_data", "adult-live/")
all_results <- list.files(path = read_path, pattern = '*.results', all.files = FALSE)
all.data <- data.frame()
for(f in 1:length(all_results)) {
data <- read.table(paste(read_path, all_results[f],sep=""), sep="\t",
header=TRUE, stringsAsFactors=FALSE)
long.data <- as.data.frame(matrix(ncol = 0, nrow = 36*nrow(data)))
c <- 1
# loops over each participant
for (i in 1:nrow(data)) {
# create list of trial information to allow for iteration
d <- fromJSON(as.character(data$Answer.data[i]))
# grab fields from JSON
for (j in 1:length(d)) {
long.data$subid[c] <- data$workerid[i]
long.data$submit.date[c] <-  paste(word(data$assignmentsubmittime[i],
start=2,end=3),
word(data$assignmentsubmittime[i]
,start=-1L))
long.data$submit.time[c] <-  word(data$assignmentsubmittime[i]
,start=4)
long.data$trial.num[c] <- j
long.data$gazeLength[c] <- fromJSON(as.character(data$Answer.condition[i]))
long.data$condition[c] <- fromJSON(as.character(data$Answer.social_cond[i]))
long.data$interval[c] <- fromJSON(as.character(data$Answer.delay_condition[i]))
long.data$numPic[c] <- fromJSON(as.character(data$Answer.numReferents[i]))
long.data$browser[c] <- fromJSON(as.character(data$Answer.browser[i]))
long.data$itemNum[c] <- d[[j]]$itemNum
long.data$trialType[c] <- d[[j]]$trialType
long.data$samePos[c] <- d[[j]]$samePos
long.data$chosen[c] <- d[[j]]$chosen
long.data$chosenIdx[c] <- d[[j]]$chosen_idx
long.data$kept[c] <- d[[j]]$kept
long.data$keptIdx[c] <- d[[j]]$kept_idx
long.data$rt[c] <- d[[j]]$rt
long.data$face[c] <- d[[j]]$face
long.data$faceIdx[c] <- d[[j]]$faceIdx
c <- c + 1
}
}
}
long.data <- long.data %>%
group_by(subid) %>%
mutate(trial_cat = ifelse(trial.num %in% seq(1,4), "example",
ifelse(trial.num %in% seq(from=5, to=35, by=2), "exposure",
ifelse(trial.num %in% seq(from=6, to=36, by=2), "test",
NA)))) %>%
arrange(subid, trial.num)
all.data <- long.data
all.data <- anonymize.sids(all.data, "subid")
View(all.data)
anonymize.sids
all.data <- anonymize.sids(long.data, "subid")
View(all.data)
install.packages(c("GGally", "ggm", "jsonlite", "mgcv", "RCurl", "reshape2", "ROAuth", "tidyr"))
source("/Users/kmacdonald/Documents/Projects/SOC_XSIT/XSIT-MIN/analysis/Ranalysis/useful.R")
library(rjson)
library(plyr)
library(dplyr)
all.data <- anonymize.sids(long.data, "subid")
View(all.data)
str(all.data)
str(long.data)
all.data$subid <- as.factor(all.data$subid)
